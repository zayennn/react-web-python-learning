{"ast":null,"code":"export const lessonCards = [{\n  id: 1,\n  title: \"Apa Itu Python?\",\n  description: \"Kenalan dulu sama Python: sejarah singkat, kelebihan, kegunaan, dan kenapa banyak dipakai pemula maupun expert.\",\n  level: \"Pemula\",\n  duration: \"1 jam\",\n  lessons: 4,\n  progress: 0,\n  image: \"üêç\",\n  topics: [\"Sejarah & Asal Usul\", \"Kenapa Python Populer?\", \"Bidang Penggunaan Python\", \"Program Pertama: Hello World\"],\n  color: \"#10B981\",\n  content: [{\n    id: 1,\n    title: \"Sejarah & Asal Usul\",\n    type: \"theory\",\n    content: `\n# Sejarah Python\n\nPython diciptakan oleh **Guido van Rossum** pada tahun 1991.  \nNama \"Python\" bukan dari ular, tapi terinspirasi dari acara komedi Inggris: *Monty Python's Flying Circus*.\n\nTujuannya: bikin bahasa pemrograman yang **mudah dibaca, sederhana, tapi powerful**.\n                `\n  }, {\n    id: 2,\n    title: \"Kenapa Python Populer?\",\n    type: \"theory\",\n    content: `\n# Kelebihan Python\n\n- Sintaks sederhana, mirip bahasa manusia.\n- Multi-purpose: bisa buat banyak hal.\n- Banyak library & framework siap pakai.\n- Komunitas besar, gampang cari bantuan.\n- Dipakai perusahaan besar (Google, Netflix, Instagram, NASA).\n                `\n  }, {\n    id: 3,\n    title: \"Bidang Penggunaan Python\",\n    type: \"theory\",\n    content: `\n# Python Dipakai di Mana Aja?\n\n1. **Web Development** ‚Üí Django, Flask, FastAPI  \n2. **Data Science & Machine Learning** ‚Üí Pandas, NumPy, TensorFlow, PyTorch  \n3. **Automation / Scripting** ‚Üí Bot, otomasi tugas kantor, scraping  \n4. **Game Development** ‚Üí Pygame  \n5. **AI & Big Data**  \n6. **Cyber Security** ‚Üí tools hacking & analisis keamanan  \n\nSingkatnya: Python bisa dipakai hampir di semua bidang IT.\n                `\n  }, {\n    id: 4,\n    title: \"Program Pertama: Hello World\",\n    type: \"theory\",\n    content: `\n# Program Pertama\n\nPython gampang banget.  \nCukup satu baris kode buat nyapa dunia:\n\n\\`\\`\\`python\nprint(\"Hello, World!\")\n\\`\\`\\`\n\nOutputnya:\n\n\\`\\`\\`\nHello, World!\n\\`\\`\\`\n                `,\n    codeExample: `print(\"Hello, World!\")`,\n    expectedOutput: `Hello, World!`\n  }]\n}, {\n  id: 2,\n  title: \"Instalasi Python & VS Code\",\n  description: \"Panduan install Python 3 dan Visual Studio Code di Windows & MacOS, termasuk setting awal biar siap ngoding.\",\n  level: \"Pemula\",\n  duration: \"1.5 jam\",\n  lessons: 4,\n  progress: 0,\n  image: \"üíª\",\n  topics: [\"Download & Install Python di Windows\", \"Download & Install Python di MacOS\", \"Install Visual Studio Code\", \"Setting Awal VS Code untuk Python\"],\n  color: \"#F59E0B\",\n  content: [{\n    id: 1,\n    title: \"Install Python di Windows\",\n    type: \"theory\",\n    content: `\n# Python di Windows\n\n1. Download installer di [python.org/downloads](https://www.python.org/downloads/).  \n   Pilih versi **Python 3.x (bukan 2.x)**.  \n2. Jalankan installer.  \n   **PENTING**: Centang *\"Add Python to PATH\"* sebelum klik Install.  \n3. Setelah selesai, cek instalasi via Command Prompt (CMD):\n\n\\`\\`\\`bash\npython --version\n\\`\\`\\`\n\nKalau muncul versi Python, artinya sukses ‚úÖ\n                `\n  }, {\n    id: 2,\n    title: \"Install Python di MacOS\",\n    type: \"theory\",\n    content: `\n# Python di MacOS\n\n1. Buka [python.org/downloads](https://www.python.org/downloads/).  \n   Download versi terbaru Python 3 untuk MacOS.  \n2. Klik file .pkg ‚Üí ikuti wizard instalasi.  \n3. Cek instalasi via Terminal:\n\n\\`\\`\\`bash\npython3 --version\n\\`\\`\\`\n\n‚ö° Note: Di Mac, biasanya pakai \\`python3\\` (bukan \\`python\\`).\n                `\n  }, {\n    id: 3,\n    title: \"Install Visual Studio Code\",\n    type: \"theory\",\n    content: `\n# Visual Studio Code (VS Code)\n\n1. Download di [code.visualstudio.com](https://code.visualstudio.com/).  \n2. Install seperti biasa (Windows: Next ‚Üí Next ‚Üí Finish).  \n3. Buka VS Code, pilih tema favorit (dark mode biar cool üòé).\n                `\n  }, {\n    id: 4,\n    title: \"Setting Awal VS Code untuk Python\",\n    type: \"theory\",\n    content: `\n# Setup VS Code\n\n1. Buka VS Code ‚Üí masuk ke **Extensions** (Ctrl+Shift+X / Cmd+Shift+X).  \n2. Cari & install **Python Extension** (by Microsoft).  \n3. Buat file baru: \\`hello.py\\`.  \n4. Isi dengan kode:\n\n\\`\\`\\`python\nprint(\"Halo, Python dari VS Code!\")\n\\`\\`\\`\n\n5. Jalankan file dengan:\n   - Klik kanan ‚Üí Run Python File\n   - atau buka terminal: \\`python hello.py\\` (Windows), \\`python3 hello.py\\` (Mac).\n                `,\n    codeExample: `print(\"Halo, Python dari VS Code!\")`,\n    expectedOutput: `Halo, Python dari VS Code!`\n  }]\n}, {\n  id: 3,\n  title: \"Cara Kerja Program & Bytecode\",\n  description: \"Pelajari bagaimana Python menjalankan kode: dari source code, bytecode, hingga interpreter Python.\",\n  level: \"Pemula\",\n  duration: \"1.5 jam\",\n  lessons: 3,\n  progress: 0,\n  image: \"‚öôÔ∏è\",\n  topics: [\"Dari Source Code ke Bytecode\", \"Interpreter Python\", \"Eksperimen Bytecode\"],\n  color: \"#F29E93\",\n  content: [{\n    id: 1,\n    title: \"Dari Source Code ke Bytecode\",\n    type: \"theory\",\n    content: `\n# Dari Source Code ke Bytecode\n\nSaat kamu nulis file Python (misalnya \\`hello.py\\`), isinya masih **source code** alias teks biasa.\n\nProses eksekusi Python:\n1. Source code ‚Üí dikompilasi ke **bytecode** (instruksi level menengah).\n2. Bytecode ‚Üí dijalankan oleh **Python Virtual Machine (PVM)**.\n\n> Bytecode ini disimpan dalam file berekstensi **.pyc** di folder \\`__pycache__\\`.\n                `,\n    codeExample: `# hello.py\nprint(\"Hello, Python!\")`,\n    expectedOutput: `Hello, Python!`\n  }, {\n    id: 2,\n    title: \"Interpreter Python\",\n    type: \"theory\",\n    content: `\n# Interpreter Python\n\nBerbeda dengan bahasa yang *compiled* (kayak C++), Python itu **interpreted language**.\n\nArtinya:\n- Kode Python ‚Üí langsung diterjemahkan baris per baris oleh **interpreter**.\n- Interpreter yang dipakai mayoritas orang = **CPython** (implementasi resmi Python dalam C).\n\nJadi, flow-nya:\n\n\\`source code (.py)\\` ‚Üí \\`bytecode (.pyc)\\` ‚Üí \\`PVM\\` ‚Üí **output**.\n                `\n  }, {\n    id: 3,\n    title: \"Eksperimen Bytecode\",\n    type: \"theory\",\n    content: `\n# Eksperimen Bytecode\n\nKita bisa ngintip bytecode dari kode Python pakai modul \\`dis\\` (disassembler).\n\nContoh:\n                `,\n    codeExample: `import dis\n\ndef halo():\n    print(\"Halo Dunia\")\n\ndis.dis(halo)`,\n    expectedOutput: `  3           0 LOAD_GLOBAL              0 (print)\n              2 LOAD_CONST               1 ('Halo Dunia')\n              4 CALL_FUNCTION            1\n              6 POP_TOP\n              8 LOAD_CONST               0 (None)\n             10 RETURN_VALUE`\n  }]\n}, {\n  id: 4,\n  title: \"Mengenal Variabel\",\n  description: \"Belajar tentang variabel di Python: apa itu variabel, cara membuatnya, aturan penamaan, tipe data dasar, dan latihan praktik.\",\n  level: \"Pemula\",\n  duration: \"1.5 jam\",\n  lessons: 5,\n  progress: 0,\n  image: \"üì¶\",\n  topics: [\"Apa Itu Variabel?\", \"Membuat Variabel\", \"Aturan Penamaan\", \"Tipe Data Dasar\", \"Latihan Praktik\"],\n  color: \"#3C467B\",\n  content: [{\n    id: 1,\n    title: \"Apa Itu Variabel?\",\n    type: \"theory\",\n    content: `\n# Apa Itu Variabel?\n\nVariabel = **wadah untuk menyimpan data**.  \nBayangin variabel kayak kotak yang punya label, dan di dalamnya ada isinya.\n\nContoh:\n- Kotak bernama \\`umur\\` berisi angka 20.\n- Kotak bernama \\`nama\\` berisi teks \"Zayen\".\n                `,\n    codeExample: `umur = 20\nnama = \"Zayen\"\nprint(umur, nama)`,\n    expectedOutput: `20 Zayen`\n  }, {\n    id: 2,\n    title: \"Membuat Variabel\",\n    type: \"theory\",\n    content: `\n# Cara Membuat Variabel\n\nDi Python, bikin variabel **gampang banget**:\n- Tinggal tulis nama variabel = nilai\n- Gak perlu deklarasi tipe data (Python otomatis ngerti)\n\nContoh:\n\\`\\`\\`python\na = 10\nb = 3.14\nc = \"Halo\"\n\\`\\`\\`\n\nOutput:\n\\`\\`\\`\n10 3.14 Halo\n\\`\\`\\`\n                `,\n    codeExample: `a = 10\nb = 3.14\nc = \"Halo\"\nprint(a, b, c)`,\n    expectedOutput: `10 3.14 Halo`\n  }, {\n    id: 3,\n    title: \"Aturan Penamaan\",\n    type: \"theory\",\n    content: `\n# Aturan Nama Variabel\n\n‚úÖ Boleh:\n- Huruf, angka, underscore (\\_)\n- Huruf kecil/besar (case-sensitive)\n\n‚ùå Tidak boleh:\n- Diawali angka (contoh: \\`1nama\\`)\n- Pakai spasi (contoh: \\`nama saya\\`)\n- Pakai simbol aneh (contoh: \\`nama@\\`)\n\nüìå Best practice:\n- Gunakan huruf kecil: \\`umur\\`, \\`nama_lengkap\\`\n- Nama jelas & mudah dipahami\n                `,\n    codeExample: `nama_lengkap = \"Budi Setiawan\"\nUmur = 21  # ini beda sama 'umur'\nprint(nama_lengkap, Umur)`,\n    expectedOutput: `Budi Setiawan 21`\n  }, {\n    id: 4,\n    title: \"Tipe Data Dasar\",\n    type: \"theory\",\n    content: `\n# Tipe Data di Variabel\n\nPython punya beberapa tipe dasar:\n- \\`int\\` ‚Üí bilangan bulat\n- \\`float\\` ‚Üí bilangan desimal\n- \\`str\\` ‚Üí teks\n- \\`bool\\` ‚Üí True / False\n- \\`None\\` ‚Üí kosong\n\nGunakan fungsi \\`type()\\` untuk cek tipe data.\n                `,\n    codeExample: `x = 10\ny = 3.14\nz = \"Halo\"\nflag = True\nkosong = None\n\nprint(type(x))\nprint(type(y))\nprint(type(z))\nprint(type(flag))\nprint(type(kosong))`,\n    expectedOutput: `<class 'int'>\n<class 'float'>\n<class 'str'>\n<class 'bool'>\n<class 'NoneType'>`\n  }, {\n    id: 5,\n    title: \"Latihan Praktik\",\n    type: \"practice\",\n    content: `\n# Latihan Variabel\n\nCoba kerjain soal berikut:\n1. Buat variabel nama, umur, kota ‚Üí lalu tampilkan dalam satu kalimat.\n2. Simpan dua angka lalu tampilkan hasil penjumlahan.\n3. Cek tipe data dari variabel \\`angka\\`, \\`teks\\`, dan \\`status\\`.\n                `,\n    exercises: [{\n      id: 1,\n      title: \"Data Diri\",\n      description: \"Buat variabel nama, umur, dan kota. Cetak dengan f-string: 'Halo, saya [nama], umur [umur], dari [kota]'.\",\n      hint: \"Gunakan f-string.\",\n      solution: `nama = \"Zayen\"\numur = 20\nkota = \"Jakarta\"\n\nprint(f\"Halo, saya {nama}, umur {umur}, dari {kota}\")`\n    }, {\n      id: 2,\n      title: \"Hitung Penjumlahan\",\n      description: \"Simpan dua angka (misal a=7, b=5), lalu tampilkan hasil tambahannya.\",\n      hint: \"Gunakan operator +.\",\n      solution: `a = 7\nb = 5\nprint(\"Hasil penjumlahan:\", a + b)`\n    }, {\n      id: 3,\n      title: \"Cek Tipe Data\",\n      description: \"Buat variabel angka=10, teks='Python', status=True. Cetak tipe data masing-masing.\",\n      hint: \"Gunakan type().\",\n      solution: `angka = 10\nteks = \"Python\"\nstatus = True\n\nprint(type(angka))\nprint(type(teks))\nprint(type(status))`\n    }]\n  }]\n}, {\n  id: 5,\n  title: \"Tipe Data di Python\",\n  description: \"Belajar berbagai tipe data penting di Python: angka, string, boolean, list, tuple, set, dict, dan NoneType.\",\n  level: \"Pemula\",\n  duration: \"2 jam\",\n  lessons: 7,\n  progress: 0,\n  image: \"üì¶\",\n  topics: [\"Angka (int & float)\", \"String (str)\", \"Boolean (bool)\", \"List\", \"Tuple\", \"Set\", \"Dictionary (dict)\", \"NoneType\", \"Latihan\"],\n  color: \"#FA812F\",\n  content: [{\n    id: 1,\n    title: \"Angka (int & float)\",\n    type: \"theory\",\n    content: `\n# Angka (Number)\n\nPython punya 2 tipe angka utama:\n- **int** ‚Üí bilangan bulat (1, -5, 1000)\n- **float** ‚Üí bilangan desimal (3.14, -0.5)\n\nBisa dipakai buat operasi matematika.\n                `,\n    codeExample: `a = 10       # int\nb = 3.14     # float\nprint(a + b)\nprint(type(a), type(b))`,\n    expectedOutput: `13.14\n<class 'int'> <class 'float'>`\n  }, {\n    id: 2,\n    title: \"String (str)\",\n    type: \"theory\",\n    content: `\n# String (Teks)\n\nString = teks. Bisa pakai tanda kutip tunggal ('') atau ganda (\"\").\n\nOperasi:\n- Gabung: \"Py\" + \"thon\"\n- Ulang: \"ha\" * 3\n- Panjang: len(\"hello\")\n- Akses huruf: teks[0]\n                `,\n    codeExample: `s = \"Python\"\nprint(s[0])      # P\nprint(s[-1])     # n\nprint(len(s))    # 6\nprint(s.upper()) # PYTHON`,\n    expectedOutput: `P\nn\n6\nPYTHON`\n  }, {\n    id: 3,\n    title: \"Boolean (bool)\",\n    type: \"theory\",\n    content: `\n# Boolean\n\nTipe data logika, hanya ada:\n- True\n- False\n\nBiasanya hasil dari perbandingan.\n                `,\n    codeExample: `print(5 > 3)\nprint(10 == 2)\nis_active = True\nprint(is_active)`,\n    expectedOutput: `True\nFalse\nTrue`\n  }, {\n    id: 4,\n    title: \"List\",\n    type: \"theory\",\n    content: `\n# List\n\nList = kumpulan data berurutan. Bisa berisi campuran tipe.\n\nCiri: **pakai tanda kurung siku [ ]**\n                `,\n    codeExample: `angka = [1, 2, 3, 4]\ncampur = [1, \"halo\", True]\n\nprint(angka[0])     # akses elemen\nangka.append(5)     # tambah elemen\nprint(angka)`,\n    expectedOutput: `1\n[1, 2, 3, 4, 5]`\n  }, {\n    id: 5,\n    title: \"Tuple\",\n    type: \"theory\",\n    content: `\n# Tuple\n\nMirip list, tapi **tidak bisa diubah** (immutable).\n\nCiri: **pakai tanda kurung ( )**\n                `,\n    codeExample: `data = (10, 20, 30)\nprint(data[1])\n# data[1] = 99  # ‚ùå error, tuple immutable`,\n    expectedOutput: `20`\n  }, {\n    id: 6,\n    title: \"Set\",\n    type: \"theory\",\n    content: `\n# Set\n\nKumpulan data unik, **tidak berurutan**.\n\nCiri: **pakai tanda kurung kurawal { }**\n                `,\n    codeExample: `s = {1, 2, 3, 3, 2}\nprint(s)     # duplikat hilang\ns.add(4)\nprint(s)`,\n    expectedOutput: `{1, 2, 3}\n{1, 2, 3, 4}`\n  }, {\n    id: 7,\n    title: \"Dictionary (dict)\",\n    type: \"theory\",\n    content: `\n# Dictionary\n\nStruktur data **key ‚Üí value**.  \nMirip objek/map di bahasa lain.\n\nCiri: **pakai { key: value }**\n                `,\n    codeExample: `mhs = {\n    \"nama\": \"Zayen\",\n    \"umur\": 20,\n    \"jurusan\": \"Informatika\"\n}\nprint(mhs[\"nama\"])\nprint(mhs.get(\"umur\"))`,\n    expectedOutput: `Zayen\n20`\n  }, {\n    id: 8,\n    title: \"NoneType\",\n    type: \"theory\",\n    content: `\n# NoneType\n\nDipakai buat nilai kosong / belum ada.\n                `,\n    codeExample: `x = None\nprint(x)\nprint(type(x))`,\n    expectedOutput: `None\n<class 'NoneType'>`\n  }, {\n    id: 9,\n    title: \"Latihan\",\n    type: \"practice\",\n    content: `\n# Latihan Tipe Data\n\nCoba selesaikan soal berikut:\n1. Buat list berisi 5 nama, lalu tampilkan nama ke-3.\n2. Buat dict berisi data diri (nama, umur, hobi) dan tampilkan hobi.\n3. Cek apakah angka input dari user genap/ganjil pakai boolean.\n4. Buat set dari list [1,2,2,3,3,4,4] ‚Üí pastikan tidak ada duplikat.\n                `,\n    exercises: [{\n      id: 1,\n      title: \"List Nama\",\n      description: \"Buat list 5 nama, cetak nama ke-3.\",\n      hint: \"Ingat, index mulai dari 0.\",\n      solution: `nama = [\"Ali\", \"Budi\", \"Citra\", \"Dewi\", \"Eka\"]\nprint(nama[2])`\n    }, {\n      id: 2,\n      title: \"Dictionary Data Diri\",\n      description: \"Buat dict dengan nama, umur, dan hobi. Cetak hobi.\",\n      hint: \"Gunakan mhs['hobi'].\",\n      solution: `mhs = {\n    \"nama\": \"Zayen\",\n    \"umur\": 20,\n    \"hobi\": \"Coding\"\n}\nprint(mhs[\"hobi\"])`\n    }, {\n      id: 3,\n      title: \"Cek Genap/Ganjil\",\n      description: \"Input angka, cek genap/ganjil.\",\n      hint: \"Gunakan % 2 == 0.\",\n      solution: `n = int(input(\"Masukkan angka: \"))\nprint(n % 2 == 0)`\n    }, {\n      id: 4,\n      title: \"Set Unik\",\n      description: \"Ubah list [1,2,2,3,3,4,4] jadi set unik.\",\n      hint: \"Gunakan fungsi set().\",\n      solution: `data = [1,2,2,3,3,4,4]\nunik = set(data)\nprint(unik)`\n    }]\n  }]\n}, {\n  id: 6,\n  title: \"Casting Tipe Data di Python\",\n  description: \"Belajar cara mengubah tipe data (casting) di Python: int, float, str, dan bool. Lengkap dengan contoh dan latihan.\",\n  level: \"Pemula\",\n  duration: \"1.5 jam\",\n  lessons: 4,\n  progress: 0,\n  image: \"üîÑ\",\n  topics: [\"Apa Itu Casting?\", \"Casting ke Integer & Float\", \"Casting ke String & Boolean\", \"Latihan Praktik\"],\n  color: \"#6F00FF\",\n  content: [{\n    id: 1,\n    title: \"Apa Itu Casting?\",\n    type: \"theory\",\n    content: `\n# Apa Itu Casting?\n\n**Casting** = proses mengubah tipe data dari satu jenis ke jenis lain.\n\nKenapa perlu casting?\n- Input dari \\`input()\\` selalu berupa **string**.\n- Kadang kita perlu angka buat operasi matematika.\n- Atau sebaliknya, ubah angka jadi teks biar bisa digabung di print.\n                `\n  }, {\n    id: 2,\n    title: \"Casting ke Integer & Float\",\n    type: \"theory\",\n    content: `\n# Integer & Float\n\n- \\`int()\\` ‚Üí ubah ke bilangan bulat.\n- \\`float()\\` ‚Üí ubah ke bilangan desimal.\n\nContoh:\n                `,\n    codeExample: `# string ke int\nangka1 = int(\"10\")\nprint(angka1, type(angka1))\n\n# string ke float\nangka2 = float(\"3.14\")\nprint(angka2, type(angka2))\n\n# float ke int (desimal dibuang)\nangka3 = int(9.99)\nprint(angka3, type(angka3))`,\n    expectedOutput: `10 <class 'int'>\n3.14 <class 'float'>\n9 <class 'int'>`\n  }, {\n    id: 3,\n    title: \"Casting ke String & Boolean\",\n    type: \"theory\",\n    content: `\n# String & Boolean\n\n- \\`str()\\` ‚Üí ubah ke teks.\n- \\`bool()\\` ‚Üí ubah ke True/False.\n\nAturan bool:\n- 0, \"\", None ‚Üí False\n- Selain itu ‚Üí True\n                `,\n    codeExample: `# int ke string\numur = 20\nprint(\"Umurku \" + str(umur))\n\n# cek bool dari angka\nprint(bool(0))   # False\nprint(bool(5))   # True\n\n# cek bool dari string\nprint(bool(\"\"))   # False\nprint(bool(\"halo\"))  # True`,\n    expectedOutput: `Umurku 20\nFalse\nTrue\nFalse\nTrue`\n  }, {\n    id: 4,\n    title: \"Latihan Casting\",\n    type: \"practice\",\n    content: `\n# Latihan Casting\n\nCoba kerjain soal berikut:\n1. Minta input umur (string), ubah jadi int, lalu hitung tahun depan.\n2. Minta input angka desimal (float), ubah ke int, lalu tampilkan hasilnya.\n3. Buat program yang minta input teks, cek apakah teks kosong atau tidak (pakai bool()).\n                `,\n    exercises: [{\n      id: 1,\n      title: \"Umur Tahun Depan\",\n      description: \"Minta input umur (string), ubah ke int, lalu tampilkan umur tahun depan.\",\n      hint: \"Gunakan int() untuk konversi input.\",\n      solution: `umur = int(input(\"Masukkan umurmu: \"))\nprint(f\"Tahun depan umurmu {umur+1}\")`\n    }, {\n      id: 2,\n      title: \"Ubah Float ke Int\",\n      description: \"Input angka desimal (float), ubah ke integer.\",\n      hint: \"Gunakan float() lalu int().\",\n      solution: `angka = float(input(\"Masukkan angka desimal: \"))\nprint(\"Hasil casting ke int:\", int(angka))`\n    }, {\n      id: 3,\n      title: \"Cek String Kosong\",\n      description: \"Program cek apakah string kosong atau tidak.\",\n      hint: \"Gunakan bool() pada input string.\",\n      solution: `teks = input(\"Masukkan teks: \")\nif bool(teks):\n    print(\"Teks tidak kosong\")\nelse:\n    print(\"Teks kosong\")`\n    }]\n  }]\n}];\nexport default lessonCards;","map":{"version":3,"names":["lessonCards","id","title","description","level","duration","lessons","progress","image","topics","color","content","type","codeExample","expectedOutput","exercises","hint","solution"],"sources":["D:/Projects/React Js/python-learning/src/pages/pelajaran/pages/pelajaran/data/LessonCard.js"],"sourcesContent":["export const lessonCards = [\r\n    {\r\n        id: 1,\r\n        title: \"Apa Itu Python?\",\r\n        description: \"Kenalan dulu sama Python: sejarah singkat, kelebihan, kegunaan, dan kenapa banyak dipakai pemula maupun expert.\",\r\n        level: \"Pemula\",\r\n        duration: \"1 jam\",\r\n        lessons: 4,\r\n        progress: 0,\r\n        image: \"üêç\",\r\n        topics: [\r\n            \"Sejarah & Asal Usul\",\r\n            \"Kenapa Python Populer?\",\r\n            \"Bidang Penggunaan Python\",\r\n            \"Program Pertama: Hello World\"\r\n        ],\r\n        color: \"#10B981\",\r\n        content: [\r\n            {\r\n                id: 1,\r\n                title: \"Sejarah & Asal Usul\",\r\n                type: \"theory\",\r\n                content: `\r\n# Sejarah Python\r\n\r\nPython diciptakan oleh **Guido van Rossum** pada tahun 1991.  \r\nNama \"Python\" bukan dari ular, tapi terinspirasi dari acara komedi Inggris: *Monty Python's Flying Circus*.\r\n\r\nTujuannya: bikin bahasa pemrograman yang **mudah dibaca, sederhana, tapi powerful**.\r\n                `\r\n            },\r\n            {\r\n                id: 2,\r\n                title: \"Kenapa Python Populer?\",\r\n                type: \"theory\",\r\n                content: `\r\n# Kelebihan Python\r\n\r\n- Sintaks sederhana, mirip bahasa manusia.\r\n- Multi-purpose: bisa buat banyak hal.\r\n- Banyak library & framework siap pakai.\r\n- Komunitas besar, gampang cari bantuan.\r\n- Dipakai perusahaan besar (Google, Netflix, Instagram, NASA).\r\n                `\r\n            },\r\n            {\r\n                id: 3,\r\n                title: \"Bidang Penggunaan Python\",\r\n                type: \"theory\",\r\n                content: `\r\n# Python Dipakai di Mana Aja?\r\n\r\n1. **Web Development** ‚Üí Django, Flask, FastAPI  \r\n2. **Data Science & Machine Learning** ‚Üí Pandas, NumPy, TensorFlow, PyTorch  \r\n3. **Automation / Scripting** ‚Üí Bot, otomasi tugas kantor, scraping  \r\n4. **Game Development** ‚Üí Pygame  \r\n5. **AI & Big Data**  \r\n6. **Cyber Security** ‚Üí tools hacking & analisis keamanan  \r\n\r\nSingkatnya: Python bisa dipakai hampir di semua bidang IT.\r\n                `\r\n            },\r\n            {\r\n                id: 4,\r\n                title: \"Program Pertama: Hello World\",\r\n                type: \"theory\",\r\n                content: `\r\n# Program Pertama\r\n\r\nPython gampang banget.  \r\nCukup satu baris kode buat nyapa dunia:\r\n\r\n\\`\\`\\`python\r\nprint(\"Hello, World!\")\r\n\\`\\`\\`\r\n\r\nOutputnya:\r\n\r\n\\`\\`\\`\r\nHello, World!\r\n\\`\\`\\`\r\n                `,\r\n                codeExample: `print(\"Hello, World!\")`,\r\n                expectedOutput: `Hello, World!`\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: 2,\r\n        title: \"Instalasi Python & VS Code\",\r\n        description: \"Panduan install Python 3 dan Visual Studio Code di Windows & MacOS, termasuk setting awal biar siap ngoding.\",\r\n        level: \"Pemula\",\r\n        duration: \"1.5 jam\",\r\n        lessons: 4,\r\n        progress: 0,\r\n        image: \"üíª\",\r\n        topics: [\r\n            \"Download & Install Python di Windows\",\r\n            \"Download & Install Python di MacOS\",\r\n            \"Install Visual Studio Code\",\r\n            \"Setting Awal VS Code untuk Python\"\r\n        ],\r\n        color: \"#F59E0B\",\r\n        content: [\r\n            {\r\n                id: 1,\r\n                title: \"Install Python di Windows\",\r\n                type: \"theory\",\r\n                content: `\r\n# Python di Windows\r\n\r\n1. Download installer di [python.org/downloads](https://www.python.org/downloads/).  \r\n   Pilih versi **Python 3.x (bukan 2.x)**.  \r\n2. Jalankan installer.  \r\n   **PENTING**: Centang *\"Add Python to PATH\"* sebelum klik Install.  \r\n3. Setelah selesai, cek instalasi via Command Prompt (CMD):\r\n\r\n\\`\\`\\`bash\r\npython --version\r\n\\`\\`\\`\r\n\r\nKalau muncul versi Python, artinya sukses ‚úÖ\r\n                `\r\n            },\r\n            {\r\n                id: 2,\r\n                title: \"Install Python di MacOS\",\r\n                type: \"theory\",\r\n                content: `\r\n# Python di MacOS\r\n\r\n1. Buka [python.org/downloads](https://www.python.org/downloads/).  \r\n   Download versi terbaru Python 3 untuk MacOS.  \r\n2. Klik file .pkg ‚Üí ikuti wizard instalasi.  \r\n3. Cek instalasi via Terminal:\r\n\r\n\\`\\`\\`bash\r\npython3 --version\r\n\\`\\`\\`\r\n\r\n‚ö° Note: Di Mac, biasanya pakai \\`python3\\` (bukan \\`python\\`).\r\n                `\r\n            },\r\n            {\r\n                id: 3,\r\n                title: \"Install Visual Studio Code\",\r\n                type: \"theory\",\r\n                content: `\r\n# Visual Studio Code (VS Code)\r\n\r\n1. Download di [code.visualstudio.com](https://code.visualstudio.com/).  \r\n2. Install seperti biasa (Windows: Next ‚Üí Next ‚Üí Finish).  \r\n3. Buka VS Code, pilih tema favorit (dark mode biar cool üòé).\r\n                `\r\n            },\r\n            {\r\n                id: 4,\r\n                title: \"Setting Awal VS Code untuk Python\",\r\n                type: \"theory\",\r\n                content: `\r\n# Setup VS Code\r\n\r\n1. Buka VS Code ‚Üí masuk ke **Extensions** (Ctrl+Shift+X / Cmd+Shift+X).  \r\n2. Cari & install **Python Extension** (by Microsoft).  \r\n3. Buat file baru: \\`hello.py\\`.  \r\n4. Isi dengan kode:\r\n\r\n\\`\\`\\`python\r\nprint(\"Halo, Python dari VS Code!\")\r\n\\`\\`\\`\r\n\r\n5. Jalankan file dengan:\r\n   - Klik kanan ‚Üí Run Python File\r\n   - atau buka terminal: \\`python hello.py\\` (Windows), \\`python3 hello.py\\` (Mac).\r\n                `,\r\n                codeExample: `print(\"Halo, Python dari VS Code!\")`,\r\n                expectedOutput: `Halo, Python dari VS Code!`\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: 3,\r\n        title: \"Cara Kerja Program & Bytecode\",\r\n        description: \"Pelajari bagaimana Python menjalankan kode: dari source code, bytecode, hingga interpreter Python.\",\r\n        level: \"Pemula\",\r\n        duration: \"1.5 jam\",\r\n        lessons: 3,\r\n        progress: 0,\r\n        image: \"‚öôÔ∏è\",\r\n        topics: [\r\n            \"Dari Source Code ke Bytecode\",\r\n            \"Interpreter Python\",\r\n            \"Eksperimen Bytecode\"\r\n        ],\r\n        color: \"#F29E93\",\r\n        content: [\r\n            {\r\n                id: 1,\r\n                title: \"Dari Source Code ke Bytecode\",\r\n                type: \"theory\",\r\n                content: `\r\n# Dari Source Code ke Bytecode\r\n\r\nSaat kamu nulis file Python (misalnya \\`hello.py\\`), isinya masih **source code** alias teks biasa.\r\n\r\nProses eksekusi Python:\r\n1. Source code ‚Üí dikompilasi ke **bytecode** (instruksi level menengah).\r\n2. Bytecode ‚Üí dijalankan oleh **Python Virtual Machine (PVM)**.\r\n\r\n> Bytecode ini disimpan dalam file berekstensi **.pyc** di folder \\`__pycache__\\`.\r\n                `,\r\n                codeExample: `# hello.py\r\nprint(\"Hello, Python!\")`,\r\n                expectedOutput: `Hello, Python!`\r\n            },\r\n            {\r\n                id: 2,\r\n                title: \"Interpreter Python\",\r\n                type: \"theory\",\r\n                content: `\r\n# Interpreter Python\r\n\r\nBerbeda dengan bahasa yang *compiled* (kayak C++), Python itu **interpreted language**.\r\n\r\nArtinya:\r\n- Kode Python ‚Üí langsung diterjemahkan baris per baris oleh **interpreter**.\r\n- Interpreter yang dipakai mayoritas orang = **CPython** (implementasi resmi Python dalam C).\r\n\r\nJadi, flow-nya:\r\n\r\n\\`source code (.py)\\` ‚Üí \\`bytecode (.pyc)\\` ‚Üí \\`PVM\\` ‚Üí **output**.\r\n                `\r\n            },\r\n            {\r\n                id: 3,\r\n                title: \"Eksperimen Bytecode\",\r\n                type: \"theory\",\r\n                content: `\r\n# Eksperimen Bytecode\r\n\r\nKita bisa ngintip bytecode dari kode Python pakai modul \\`dis\\` (disassembler).\r\n\r\nContoh:\r\n                `,\r\n                codeExample: `import dis\r\n\r\ndef halo():\r\n    print(\"Halo Dunia\")\r\n\r\ndis.dis(halo)`,\r\n                expectedOutput: `  3           0 LOAD_GLOBAL              0 (print)\r\n              2 LOAD_CONST               1 ('Halo Dunia')\r\n              4 CALL_FUNCTION            1\r\n              6 POP_TOP\r\n              8 LOAD_CONST               0 (None)\r\n             10 RETURN_VALUE`\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: 4,\r\n        title: \"Mengenal Variabel\",\r\n        description: \"Belajar tentang variabel di Python: apa itu variabel, cara membuatnya, aturan penamaan, tipe data dasar, dan latihan praktik.\",\r\n        level: \"Pemula\",\r\n        duration: \"1.5 jam\",\r\n        lessons: 5,\r\n        progress: 0,\r\n        image: \"üì¶\",\r\n        topics: [\r\n            \"Apa Itu Variabel?\",\r\n            \"Membuat Variabel\",\r\n            \"Aturan Penamaan\",\r\n            \"Tipe Data Dasar\",\r\n            \"Latihan Praktik\"\r\n        ],\r\n        color: \"#3C467B\",\r\n        content: [\r\n            {\r\n                id: 1,\r\n                title: \"Apa Itu Variabel?\",\r\n                type: \"theory\",\r\n                content: `\r\n# Apa Itu Variabel?\r\n\r\nVariabel = **wadah untuk menyimpan data**.  \r\nBayangin variabel kayak kotak yang punya label, dan di dalamnya ada isinya.\r\n\r\nContoh:\r\n- Kotak bernama \\`umur\\` berisi angka 20.\r\n- Kotak bernama \\`nama\\` berisi teks \"Zayen\".\r\n                `,\r\n                codeExample: `umur = 20\r\nnama = \"Zayen\"\r\nprint(umur, nama)`,\r\n                expectedOutput: `20 Zayen`\r\n            },\r\n            {\r\n                id: 2,\r\n                title: \"Membuat Variabel\",\r\n                type: \"theory\",\r\n                content: `\r\n# Cara Membuat Variabel\r\n\r\nDi Python, bikin variabel **gampang banget**:\r\n- Tinggal tulis nama variabel = nilai\r\n- Gak perlu deklarasi tipe data (Python otomatis ngerti)\r\n\r\nContoh:\r\n\\`\\`\\`python\r\na = 10\r\nb = 3.14\r\nc = \"Halo\"\r\n\\`\\`\\`\r\n\r\nOutput:\r\n\\`\\`\\`\r\n10 3.14 Halo\r\n\\`\\`\\`\r\n                `,\r\n                codeExample: `a = 10\r\nb = 3.14\r\nc = \"Halo\"\r\nprint(a, b, c)`,\r\n                expectedOutput: `10 3.14 Halo`\r\n            },\r\n            {\r\n                id: 3,\r\n                title: \"Aturan Penamaan\",\r\n                type: \"theory\",\r\n                content: `\r\n# Aturan Nama Variabel\r\n\r\n‚úÖ Boleh:\r\n- Huruf, angka, underscore (\\_)\r\n- Huruf kecil/besar (case-sensitive)\r\n\r\n‚ùå Tidak boleh:\r\n- Diawali angka (contoh: \\`1nama\\`)\r\n- Pakai spasi (contoh: \\`nama saya\\`)\r\n- Pakai simbol aneh (contoh: \\`nama@\\`)\r\n\r\nüìå Best practice:\r\n- Gunakan huruf kecil: \\`umur\\`, \\`nama_lengkap\\`\r\n- Nama jelas & mudah dipahami\r\n                `,\r\n                codeExample: `nama_lengkap = \"Budi Setiawan\"\r\nUmur = 21  # ini beda sama 'umur'\r\nprint(nama_lengkap, Umur)`,\r\n                expectedOutput: `Budi Setiawan 21`\r\n            },\r\n            {\r\n                id: 4,\r\n                title: \"Tipe Data Dasar\",\r\n                type: \"theory\",\r\n                content: `\r\n# Tipe Data di Variabel\r\n\r\nPython punya beberapa tipe dasar:\r\n- \\`int\\` ‚Üí bilangan bulat\r\n- \\`float\\` ‚Üí bilangan desimal\r\n- \\`str\\` ‚Üí teks\r\n- \\`bool\\` ‚Üí True / False\r\n- \\`None\\` ‚Üí kosong\r\n\r\nGunakan fungsi \\`type()\\` untuk cek tipe data.\r\n                `,\r\n                codeExample: `x = 10\r\ny = 3.14\r\nz = \"Halo\"\r\nflag = True\r\nkosong = None\r\n\r\nprint(type(x))\r\nprint(type(y))\r\nprint(type(z))\r\nprint(type(flag))\r\nprint(type(kosong))`,\r\n                expectedOutput: `<class 'int'>\r\n<class 'float'>\r\n<class 'str'>\r\n<class 'bool'>\r\n<class 'NoneType'>`\r\n            },\r\n            {\r\n                id: 5,\r\n                title: \"Latihan Praktik\",\r\n                type: \"practice\",\r\n                content: `\r\n# Latihan Variabel\r\n\r\nCoba kerjain soal berikut:\r\n1. Buat variabel nama, umur, kota ‚Üí lalu tampilkan dalam satu kalimat.\r\n2. Simpan dua angka lalu tampilkan hasil penjumlahan.\r\n3. Cek tipe data dari variabel \\`angka\\`, \\`teks\\`, dan \\`status\\`.\r\n                `,\r\n                exercises: [\r\n                    {\r\n                        id: 1,\r\n                        title: \"Data Diri\",\r\n                        description: \"Buat variabel nama, umur, dan kota. Cetak dengan f-string: 'Halo, saya [nama], umur [umur], dari [kota]'.\",\r\n                        hint: \"Gunakan f-string.\",\r\n                        solution: `nama = \"Zayen\"\r\numur = 20\r\nkota = \"Jakarta\"\r\n\r\nprint(f\"Halo, saya {nama}, umur {umur}, dari {kota}\")`\r\n                    },\r\n                    {\r\n                        id: 2,\r\n                        title: \"Hitung Penjumlahan\",\r\n                        description: \"Simpan dua angka (misal a=7, b=5), lalu tampilkan hasil tambahannya.\",\r\n                        hint: \"Gunakan operator +.\",\r\n                        solution: `a = 7\r\nb = 5\r\nprint(\"Hasil penjumlahan:\", a + b)`\r\n                    },\r\n                    {\r\n                        id: 3,\r\n                        title: \"Cek Tipe Data\",\r\n                        description: \"Buat variabel angka=10, teks='Python', status=True. Cetak tipe data masing-masing.\",\r\n                        hint: \"Gunakan type().\",\r\n                        solution: `angka = 10\r\nteks = \"Python\"\r\nstatus = True\r\n\r\nprint(type(angka))\r\nprint(type(teks))\r\nprint(type(status))`\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: 5,\r\n        title: \"Tipe Data di Python\",\r\n        description: \"Belajar berbagai tipe data penting di Python: angka, string, boolean, list, tuple, set, dict, dan NoneType.\",\r\n        level: \"Pemula\",\r\n        duration: \"2 jam\",\r\n        lessons: 7,\r\n        progress: 0,\r\n        image: \"üì¶\",\r\n        topics: [\r\n            \"Angka (int & float)\",\r\n            \"String (str)\",\r\n            \"Boolean (bool)\",\r\n            \"List\",\r\n            \"Tuple\",\r\n            \"Set\",\r\n            \"Dictionary (dict)\",\r\n            \"NoneType\",\r\n            \"Latihan\"\r\n        ],\r\n        color: \"#FA812F\",\r\n        content: [\r\n            {\r\n                id: 1,\r\n                title: \"Angka (int & float)\",\r\n                type: \"theory\",\r\n                content: `\r\n# Angka (Number)\r\n\r\nPython punya 2 tipe angka utama:\r\n- **int** ‚Üí bilangan bulat (1, -5, 1000)\r\n- **float** ‚Üí bilangan desimal (3.14, -0.5)\r\n\r\nBisa dipakai buat operasi matematika.\r\n                `,\r\n                codeExample: `a = 10       # int\r\nb = 3.14     # float\r\nprint(a + b)\r\nprint(type(a), type(b))`,\r\n                expectedOutput: `13.14\r\n<class 'int'> <class 'float'>`\r\n            },\r\n            {\r\n                id: 2,\r\n                title: \"String (str)\",\r\n                type: \"theory\",\r\n                content: `\r\n# String (Teks)\r\n\r\nString = teks. Bisa pakai tanda kutip tunggal ('') atau ganda (\"\").\r\n\r\nOperasi:\r\n- Gabung: \"Py\" + \"thon\"\r\n- Ulang: \"ha\" * 3\r\n- Panjang: len(\"hello\")\r\n- Akses huruf: teks[0]\r\n                `,\r\n                codeExample: `s = \"Python\"\r\nprint(s[0])      # P\r\nprint(s[-1])     # n\r\nprint(len(s))    # 6\r\nprint(s.upper()) # PYTHON`,\r\n                expectedOutput: `P\r\nn\r\n6\r\nPYTHON`\r\n            },\r\n            {\r\n                id: 3,\r\n                title: \"Boolean (bool)\",\r\n                type: \"theory\",\r\n                content: `\r\n# Boolean\r\n\r\nTipe data logika, hanya ada:\r\n- True\r\n- False\r\n\r\nBiasanya hasil dari perbandingan.\r\n                `,\r\n                codeExample: `print(5 > 3)\r\nprint(10 == 2)\r\nis_active = True\r\nprint(is_active)`,\r\n                expectedOutput: `True\r\nFalse\r\nTrue`\r\n            },\r\n            {\r\n                id: 4,\r\n                title: \"List\",\r\n                type: \"theory\",\r\n                content: `\r\n# List\r\n\r\nList = kumpulan data berurutan. Bisa berisi campuran tipe.\r\n\r\nCiri: **pakai tanda kurung siku [ ]**\r\n                `,\r\n                codeExample: `angka = [1, 2, 3, 4]\r\ncampur = [1, \"halo\", True]\r\n\r\nprint(angka[0])     # akses elemen\r\nangka.append(5)     # tambah elemen\r\nprint(angka)`,\r\n                expectedOutput: `1\r\n[1, 2, 3, 4, 5]`\r\n            },\r\n            {\r\n                id: 5,\r\n                title: \"Tuple\",\r\n                type: \"theory\",\r\n                content: `\r\n# Tuple\r\n\r\nMirip list, tapi **tidak bisa diubah** (immutable).\r\n\r\nCiri: **pakai tanda kurung ( )**\r\n                `,\r\n                codeExample: `data = (10, 20, 30)\r\nprint(data[1])\r\n# data[1] = 99  # ‚ùå error, tuple immutable`,\r\n                expectedOutput: `20`\r\n            },\r\n            {\r\n                id: 6,\r\n                title: \"Set\",\r\n                type: \"theory\",\r\n                content: `\r\n# Set\r\n\r\nKumpulan data unik, **tidak berurutan**.\r\n\r\nCiri: **pakai tanda kurung kurawal { }**\r\n                `,\r\n                codeExample: `s = {1, 2, 3, 3, 2}\r\nprint(s)     # duplikat hilang\r\ns.add(4)\r\nprint(s)`,\r\n                expectedOutput: `{1, 2, 3}\r\n{1, 2, 3, 4}`\r\n            },\r\n            {\r\n                id: 7,\r\n                title: \"Dictionary (dict)\",\r\n                type: \"theory\",\r\n                content: `\r\n# Dictionary\r\n\r\nStruktur data **key ‚Üí value**.  \r\nMirip objek/map di bahasa lain.\r\n\r\nCiri: **pakai { key: value }**\r\n                `,\r\n                codeExample: `mhs = {\r\n    \"nama\": \"Zayen\",\r\n    \"umur\": 20,\r\n    \"jurusan\": \"Informatika\"\r\n}\r\nprint(mhs[\"nama\"])\r\nprint(mhs.get(\"umur\"))`,\r\n                expectedOutput: `Zayen\r\n20`\r\n            },\r\n            {\r\n                id: 8,\r\n                title: \"NoneType\",\r\n                type: \"theory\",\r\n                content: `\r\n# NoneType\r\n\r\nDipakai buat nilai kosong / belum ada.\r\n                `,\r\n                codeExample: `x = None\r\nprint(x)\r\nprint(type(x))`,\r\n                expectedOutput: `None\r\n<class 'NoneType'>`\r\n            },\r\n            {\r\n                id: 9,\r\n                title: \"Latihan\",\r\n                type: \"practice\",\r\n                content: `\r\n# Latihan Tipe Data\r\n\r\nCoba selesaikan soal berikut:\r\n1. Buat list berisi 5 nama, lalu tampilkan nama ke-3.\r\n2. Buat dict berisi data diri (nama, umur, hobi) dan tampilkan hobi.\r\n3. Cek apakah angka input dari user genap/ganjil pakai boolean.\r\n4. Buat set dari list [1,2,2,3,3,4,4] ‚Üí pastikan tidak ada duplikat.\r\n                `,\r\n                exercises: [\r\n                    {\r\n                        id: 1,\r\n                        title: \"List Nama\",\r\n                        description: \"Buat list 5 nama, cetak nama ke-3.\",\r\n                        hint: \"Ingat, index mulai dari 0.\",\r\n                        solution: `nama = [\"Ali\", \"Budi\", \"Citra\", \"Dewi\", \"Eka\"]\r\nprint(nama[2])`\r\n                    },\r\n                    {\r\n                        id: 2,\r\n                        title: \"Dictionary Data Diri\",\r\n                        description: \"Buat dict dengan nama, umur, dan hobi. Cetak hobi.\",\r\n                        hint: \"Gunakan mhs['hobi'].\",\r\n                        solution: `mhs = {\r\n    \"nama\": \"Zayen\",\r\n    \"umur\": 20,\r\n    \"hobi\": \"Coding\"\r\n}\r\nprint(mhs[\"hobi\"])`\r\n                    },\r\n                    {\r\n                        id: 3,\r\n                        title: \"Cek Genap/Ganjil\",\r\n                        description: \"Input angka, cek genap/ganjil.\",\r\n                        hint: \"Gunakan % 2 == 0.\",\r\n                        solution: `n = int(input(\"Masukkan angka: \"))\r\nprint(n % 2 == 0)`\r\n                    },\r\n                    {\r\n                        id: 4,\r\n                        title: \"Set Unik\",\r\n                        description: \"Ubah list [1,2,2,3,3,4,4] jadi set unik.\",\r\n                        hint: \"Gunakan fungsi set().\",\r\n                        solution: `data = [1,2,2,3,3,4,4]\r\nunik = set(data)\r\nprint(unik)`\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: 6,\r\n        title: \"Casting Tipe Data di Python\",\r\n        description: \"Belajar cara mengubah tipe data (casting) di Python: int, float, str, dan bool. Lengkap dengan contoh dan latihan.\",\r\n        level: \"Pemula\",\r\n        duration: \"1.5 jam\",\r\n        lessons: 4,\r\n        progress: 0,\r\n        image: \"üîÑ\",\r\n        topics: [\r\n            \"Apa Itu Casting?\",\r\n            \"Casting ke Integer & Float\",\r\n            \"Casting ke String & Boolean\",\r\n            \"Latihan Praktik\"\r\n        ],\r\n        color: \"#6F00FF\",\r\n        content: [\r\n            {\r\n                id: 1,\r\n                title: \"Apa Itu Casting?\",\r\n                type: \"theory\",\r\n                content: `\r\n# Apa Itu Casting?\r\n\r\n**Casting** = proses mengubah tipe data dari satu jenis ke jenis lain.\r\n\r\nKenapa perlu casting?\r\n- Input dari \\`input()\\` selalu berupa **string**.\r\n- Kadang kita perlu angka buat operasi matematika.\r\n- Atau sebaliknya, ubah angka jadi teks biar bisa digabung di print.\r\n                `\r\n            },\r\n            {\r\n                id: 2,\r\n                title: \"Casting ke Integer & Float\",\r\n                type: \"theory\",\r\n                content: `\r\n# Integer & Float\r\n\r\n- \\`int()\\` ‚Üí ubah ke bilangan bulat.\r\n- \\`float()\\` ‚Üí ubah ke bilangan desimal.\r\n\r\nContoh:\r\n                `,\r\n                codeExample: `# string ke int\r\nangka1 = int(\"10\")\r\nprint(angka1, type(angka1))\r\n\r\n# string ke float\r\nangka2 = float(\"3.14\")\r\nprint(angka2, type(angka2))\r\n\r\n# float ke int (desimal dibuang)\r\nangka3 = int(9.99)\r\nprint(angka3, type(angka3))`,\r\n                expectedOutput: `10 <class 'int'>\r\n3.14 <class 'float'>\r\n9 <class 'int'>`\r\n            },\r\n            {\r\n                id: 3,\r\n                title: \"Casting ke String & Boolean\",\r\n                type: \"theory\",\r\n                content: `\r\n# String & Boolean\r\n\r\n- \\`str()\\` ‚Üí ubah ke teks.\r\n- \\`bool()\\` ‚Üí ubah ke True/False.\r\n\r\nAturan bool:\r\n- 0, \"\", None ‚Üí False\r\n- Selain itu ‚Üí True\r\n                `,\r\n                codeExample: `# int ke string\r\numur = 20\r\nprint(\"Umurku \" + str(umur))\r\n\r\n# cek bool dari angka\r\nprint(bool(0))   # False\r\nprint(bool(5))   # True\r\n\r\n# cek bool dari string\r\nprint(bool(\"\"))   # False\r\nprint(bool(\"halo\"))  # True`,\r\n                expectedOutput: `Umurku 20\r\nFalse\r\nTrue\r\nFalse\r\nTrue`\r\n            },\r\n            {\r\n                id: 4,\r\n                title: \"Latihan Casting\",\r\n                type: \"practice\",\r\n                content: `\r\n# Latihan Casting\r\n\r\nCoba kerjain soal berikut:\r\n1. Minta input umur (string), ubah jadi int, lalu hitung tahun depan.\r\n2. Minta input angka desimal (float), ubah ke int, lalu tampilkan hasilnya.\r\n3. Buat program yang minta input teks, cek apakah teks kosong atau tidak (pakai bool()).\r\n                `,\r\n                exercises: [\r\n                    {\r\n                        id: 1,\r\n                        title: \"Umur Tahun Depan\",\r\n                        description: \"Minta input umur (string), ubah ke int, lalu tampilkan umur tahun depan.\",\r\n                        hint: \"Gunakan int() untuk konversi input.\",\r\n                        solution: `umur = int(input(\"Masukkan umurmu: \"))\r\nprint(f\"Tahun depan umurmu {umur+1}\")`\r\n                    },\r\n                    {\r\n                        id: 2,\r\n                        title: \"Ubah Float ke Int\",\r\n                        description: \"Input angka desimal (float), ubah ke integer.\",\r\n                        hint: \"Gunakan float() lalu int().\",\r\n                        solution: `angka = float(input(\"Masukkan angka desimal: \"))\r\nprint(\"Hasil casting ke int:\", int(angka))`\r\n                    },\r\n                    {\r\n                        id: 3,\r\n                        title: \"Cek String Kosong\",\r\n                        description: \"Program cek apakah string kosong atau tidak.\",\r\n                        hint: \"Gunakan bool() pada input string.\",\r\n                        solution: `teks = input(\"Masukkan teks: \")\r\nif bool(teks):\r\n    print(\"Teks tidak kosong\")\r\nelse:\r\n    print(\"Teks kosong\")`\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n];\r\n\r\nexport default lessonCards;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}