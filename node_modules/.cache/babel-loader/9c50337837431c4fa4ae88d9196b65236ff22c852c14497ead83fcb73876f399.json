{"ast":null,"code":"export const lessonCards = [{\n  id: 1,\n  title: \"Apa Itu Python?\",\n  description: \"Kenalan dulu sama Python: sejarah singkat, kelebihan, kegunaan, dan kenapa banyak dipakai pemula maupun expert.\",\n  level: \"Pemula\",\n  duration: \"1 jam\",\n  lessons: 4,\n  progress: 0,\n  image: \"üêç\",\n  topics: [\"Sejarah & Asal Usul\", \"Kenapa Python Populer?\", \"Bidang Penggunaan Python\", \"Program Pertama: Hello World\"],\n  color: \"#10B981\",\n  content: [{\n    id: 1,\n    title: \"Sejarah & Asal Usul\",\n    type: \"theory\",\n    content: `\n# Sejarah Python\n\nPython diciptakan oleh **Guido van Rossum** pada tahun 1991.  \nNama \"Python\" bukan dari ular, tapi terinspirasi dari acara komedi Inggris: *Monty Python's Flying Circus*.\n\nTujuannya: bikin bahasa pemrograman yang **mudah dibaca, sederhana, tapi powerful**.\n                `\n  }, {\n    id: 2,\n    title: \"Kenapa Python Populer?\",\n    type: \"theory\",\n    content: `\n# Kelebihan Python\n\n- Sintaks sederhana, mirip bahasa manusia.\n- Multi-purpose: bisa buat banyak hal.\n- Banyak library & framework siap pakai.\n- Komunitas besar, gampang cari bantuan.\n- Dipakai perusahaan besar (Google, Netflix, Instagram, NASA).\n                `\n  }, {\n    id: 3,\n    title: \"Bidang Penggunaan Python\",\n    type: \"theory\",\n    content: `\n# Python Dipakai di Mana Aja?\n\n1. **Web Development** ‚Üí Django, Flask, FastAPI  \n2. **Data Science & Machine Learning** ‚Üí Pandas, NumPy, TensorFlow, PyTorch  \n3. **Automation / Scripting** ‚Üí Bot, otomasi tugas kantor, scraping  \n4. **Game Development** ‚Üí Pygame  \n5. **AI & Big Data**  \n6. **Cyber Security** ‚Üí tools hacking & analisis keamanan  \n\nSingkatnya: Python bisa dipakai hampir di semua bidang IT.\n                `\n  }, {\n    id: 4,\n    title: \"Program Pertama: Hello World\",\n    type: \"theory\",\n    content: `\n# Program Pertama\n\nPython gampang banget.  \nCukup satu baris kode buat nyapa dunia:\n\n\\`\\`\\`python\nprint(\"Hello, World!\")\n\\`\\`\\`\n\nOutputnya:\n\n\\`\\`\\`\nHello, World!\n\\`\\`\\`\n                `,\n    codeExample: `print(\"Hello, World!\")`,\n    expectedOutput: `Hello, World!`\n  }]\n}, {\n  id: 2,\n  title: \"Instalasi Python & VS Code\",\n  description: \"Panduan install Python 3 dan Visual Studio Code di Windows & MacOS, termasuk setting awal biar siap ngoding.\",\n  level: \"Pemula\",\n  duration: \"1.5 jam\",\n  lessons: 4,\n  progress: 0,\n  image: \"üíª\",\n  topics: [\"Download & Install Python di Windows\", \"Download & Install Python di MacOS\", \"Install Visual Studio Code\", \"Setting Awal VS Code untuk Python\"],\n  color: \"#F59E0B\",\n  content: [{\n    id: 1,\n    title: \"Install Python di Windows\",\n    type: \"theory\",\n    content: `\n# Python di Windows\n\n1. Download installer di [python.org/downloads](https://www.python.org/downloads/).  \n   Pilih versi **Python 3.x (bukan 2.x)**.  \n2. Jalankan installer.  \n   **PENTING**: Centang *\"Add Python to PATH\"* sebelum klik Install.  \n3. Setelah selesai, cek instalasi via Command Prompt (CMD):\n\n\\`\\`\\`bash\npython --version\n\\`\\`\\`\n\nKalau muncul versi Python, artinya sukses ‚úÖ\n                `\n  }, {\n    id: 2,\n    title: \"Install Python di MacOS\",\n    type: \"theory\",\n    content: `\n# Python di MacOS\n\n1. Buka [python.org/downloads](https://www.python.org/downloads/).  \n   Download versi terbaru Python 3 untuk MacOS.  \n2. Klik file .pkg ‚Üí ikuti wizard instalasi.  \n3. Cek instalasi via Terminal:\n\n\\`\\`\\`bash\npython3 --version\n\\`\\`\\`\n\n‚ö° Note: Di Mac, biasanya pakai \\`python3\\` (bukan \\`python\\`).\n                `\n  }, {\n    id: 3,\n    title: \"Install Visual Studio Code\",\n    type: \"theory\",\n    content: `\n# Visual Studio Code (VS Code)\n\n1. Download di [code.visualstudio.com](https://code.visualstudio.com/).  \n2. Install seperti biasa (Windows: Next ‚Üí Next ‚Üí Finish).  \n3. Buka VS Code, pilih tema favorit (dark mode biar cool üòé).\n                `\n  }, {\n    id: 4,\n    title: \"Setting Awal VS Code untuk Python\",\n    type: \"theory\",\n    content: `\n# Setup VS Code\n\n1. Buka VS Code ‚Üí masuk ke **Extensions** (Ctrl+Shift+X / Cmd+Shift+X).  \n2. Cari & install **Python Extension** (by Microsoft).  \n3. Buat file baru: \\`hello.py\\`.  \n4. Isi dengan kode:\n\n\\`\\`\\`python\nprint(\"Halo, Python dari VS Code!\")\n\\`\\`\\`\n\n5. Jalankan file dengan:\n   - Klik kanan ‚Üí Run Python File\n   - atau buka terminal: \\`python hello.py\\` (Windows), \\`python3 hello.py\\` (Mac).\n                `,\n    codeExample: `print(\"Halo, Python dari VS Code!\")`,\n    expectedOutput: `Halo, Python dari VS Code!`\n  }]\n}, {\n  id: 3,\n  title: \"Cara Kerja Program & Bytecode\",\n  description: \"Pelajari bagaimana Python menjalankan kode: dari source code, bytecode, hingga interpreter Python.\",\n  level: \"Pemula\",\n  duration: \"1.5 jam\",\n  lessons: 3,\n  progress: 0,\n  image: \"‚öôÔ∏è\",\n  topics: [\"Dari Source Code ke Bytecode\", \"Interpreter Python\", \"Eksperimen Bytecode\"],\n  color: \"#F29E93\",\n  content: [{\n    id: 1,\n    title: \"Dari Source Code ke Bytecode\",\n    type: \"theory\",\n    content: `\n# Dari Source Code ke Bytecode\n\nSaat kamu nulis file Python (misalnya \\`hello.py\\`), isinya masih **source code** alias teks biasa.\n\nProses eksekusi Python:\n1. Source code ‚Üí dikompilasi ke **bytecode** (instruksi level menengah).\n2. Bytecode ‚Üí dijalankan oleh **Python Virtual Machine (PVM)**.\n\n> Bytecode ini disimpan dalam file berekstensi **.pyc** di folder \\`__pycache__\\`.\n                `,\n    codeExample: `# hello.py\nprint(\"Hello, Python!\")`,\n    expectedOutput: `Hello, Python!`\n  }, {\n    id: 2,\n    title: \"Interpreter Python\",\n    type: \"theory\",\n    content: `\n# Interpreter Python\n\nBerbeda dengan bahasa yang *compiled* (kayak C++), Python itu **interpreted language**.\n\nArtinya:\n- Kode Python ‚Üí langsung diterjemahkan baris per baris oleh **interpreter**.\n- Interpreter yang dipakai mayoritas orang = **CPython** (implementasi resmi Python dalam C).\n\nJadi, flow-nya:\n\n\\`source code (.py)\\` ‚Üí \\`bytecode (.pyc)\\` ‚Üí \\`PVM\\` ‚Üí **output**.\n                `\n  }, {\n    id: 3,\n    title: \"Eksperimen Bytecode\",\n    type: \"theory\",\n    content: `\n# Eksperimen Bytecode\n\nKita bisa ngintip bytecode dari kode Python pakai modul \\`dis\\` (disassembler).\n\nContoh:\n                `,\n    codeExample: `import dis\n\ndef halo():\n    print(\"Halo Dunia\")\n\ndis.dis(halo)`,\n    expectedOutput: `  3           0 LOAD_GLOBAL              0 (print)\n              2 LOAD_CONST               1 ('Halo Dunia')\n              4 CALL_FUNCTION            1\n              6 POP_TOP\n              8 LOAD_CONST               0 (None)\n             10 RETURN_VALUE`\n  }]\n}, {\n  id: 4,\n  title: \"Mengenal Variabel\",\n  description: \"Belajar tentang variabel di Python: apa itu variabel, cara membuatnya, aturan penamaan, tipe data dasar, dan latihan praktik.\",\n  level: \"Pemula\",\n  duration: \"1.5 jam\",\n  lessons: 5,\n  progress: 0,\n  image: \"üì¶\",\n  topics: [\"Apa Itu Variabel?\", \"Membuat Variabel\", \"Aturan Penamaan\", \"Tipe Data Dasar\", \"Latihan Praktik\"],\n  color: \"#3C467B\",\n  content: [{\n    id: 1,\n    title: \"Apa Itu Variabel?\",\n    type: \"theory\",\n    content: `\n# Apa Itu Variabel?\n\nVariabel = **wadah untuk menyimpan data**.  \nBayangin variabel kayak kotak yang punya label, dan di dalamnya ada isinya.\n\nContoh:\n- Kotak bernama \\`umur\\` berisi angka 20.\n- Kotak bernama \\`nama\\` berisi teks \"Zayen\".\n                `,\n    codeExample: `umur = 20\nnama = \"Zayen\"\nprint(umur, nama)`,\n    expectedOutput: `20 Zayen`\n  }, {\n    id: 2,\n    title: \"Membuat Variabel\",\n    type: \"theory\",\n    content: `\n# Cara Membuat Variabel\n\nDi Python, bikin variabel **gampang banget**:\n- Tinggal tulis nama variabel = nilai\n- Gak perlu deklarasi tipe data (Python otomatis ngerti)\n\nContoh:\n\\`\\`\\`python\na = 10\nb = 3.14\nc = \"Halo\"\n\\`\\`\\`\n\nOutput:\n\\`\\`\\`\n10 3.14 Halo\n\\`\\`\\`\n                `,\n    codeExample: `a = 10\nb = 3.14\nc = \"Halo\"\nprint(a, b, c)`,\n    expectedOutput: `10 3.14 Halo`\n  }, {\n    id: 3,\n    title: \"Aturan Penamaan\",\n    type: \"theory\",\n    content: `\n# Aturan Nama Variabel\n\n‚úÖ Boleh:\n- Huruf, angka, underscore (\\_)\n- Huruf kecil/besar (case-sensitive)\n\n‚ùå Tidak boleh:\n- Diawali angka (contoh: \\`1nama\\`)\n- Pakai spasi (contoh: \\`nama saya\\`)\n- Pakai simbol aneh (contoh: \\`nama@\\`)\n\nüìå Best practice:\n- Gunakan huruf kecil: \\`umur\\`, \\`nama_lengkap\\`\n- Nama jelas & mudah dipahami\n                `,\n    codeExample: `nama_lengkap = \"Budi Setiawan\"\nUmur = 21  # ini beda sama 'umur'\nprint(nama_lengkap, Umur)`,\n    expectedOutput: `Budi Setiawan 21`\n  }, {\n    id: 4,\n    title: \"Tipe Data Dasar\",\n    type: \"theory\",\n    content: `\n# Tipe Data di Variabel\n\nPython punya beberapa tipe dasar:\n- \\`int\\` ‚Üí bilangan bulat\n- \\`float\\` ‚Üí bilangan desimal\n- \\`str\\` ‚Üí teks\n- \\`bool\\` ‚Üí True / False\n- \\`None\\` ‚Üí kosong\n\nGunakan fungsi \\`type()\\` untuk cek tipe data.\n                `,\n    codeExample: `x = 10\ny = 3.14\nz = \"Halo\"\nflag = True\nkosong = None\n\nprint(type(x))\nprint(type(y))\nprint(type(z))\nprint(type(flag))\nprint(type(kosong))`,\n    expectedOutput: `<class 'int'>\n<class 'float'>\n<class 'str'>\n<class 'bool'>\n<class 'NoneType'>`\n  }, {\n    id: 5,\n    title: \"Latihan Praktik\",\n    type: \"practice\",\n    content: `\n# Latihan Variabel\n\nCoba kerjain soal berikut:\n1. Buat variabel nama, umur, kota ‚Üí lalu tampilkan dalam satu kalimat.\n2. Simpan dua angka lalu tampilkan hasil penjumlahan.\n3. Cek tipe data dari variabel \\`angka\\`, \\`teks\\`, dan \\`status\\`.\n                `,\n    exercises: [{\n      id: 1,\n      title: \"Data Diri\",\n      description: \"Buat variabel nama, umur, dan kota. Cetak dengan f-string: 'Halo, saya [nama], umur [umur], dari [kota]'.\",\n      hint: \"Gunakan f-string.\",\n      solution: `nama = \"Zayen\"\numur = 20\nkota = \"Jakarta\"\n\nprint(f\"Halo, saya {nama}, umur {umur}, dari {kota}\")`\n    }, {\n      id: 2,\n      title: \"Hitung Penjumlahan\",\n      description: \"Simpan dua angka (misal a=7, b=5), lalu tampilkan hasil tambahannya.\",\n      hint: \"Gunakan operator +.\",\n      solution: `a = 7\nb = 5\nprint(\"Hasil penjumlahan:\", a + b)`\n    }, {\n      id: 3,\n      title: \"Cek Tipe Data\",\n      description: \"Buat variabel angka=10, teks='Python', status=True. Cetak tipe data masing-masing.\",\n      hint: \"Gunakan type().\",\n      solution: `angka = 10\nteks = \"Python\"\nstatus = True\n\nprint(type(angka))\nprint(type(teks))\nprint(type(status))`\n    }]\n  }]\n}, {\n  id: 5,\n  title: \"Tipe Data di Python\",\n  description: \"Belajar berbagai tipe data penting di Python: angka, string, boolean, list, tuple, set, dict, dan NoneType.\",\n  level: \"Pemula\",\n  duration: \"2 jam\",\n  lessons: 7,\n  progress: 0,\n  image: \"üì¶\",\n  topics: [\"Angka (int & float)\", \"String (str)\", \"Boolean (bool)\", \"List\", \"Tuple\", \"Set\", \"Dictionary (dict)\", \"NoneType\", \"Latihan\"],\n  color: \"#FA812F\",\n  content: [{\n    id: 1,\n    title: \"Angka (int & float)\",\n    type: \"theory\",\n    content: `\n# Angka (Number)\n\nPython punya 2 tipe angka utama:\n- **int** ‚Üí bilangan bulat (1, -5, 1000)\n- **float** ‚Üí bilangan desimal (3.14, -0.5)\n\nBisa dipakai buat operasi matematika.\n                `,\n    codeExample: `a = 10       # int\nb = 3.14     # float\nprint(a + b)\nprint(type(a), type(b))`,\n    expectedOutput: `13.14\n<class 'int'> <class 'float'>`\n  }, {\n    id: 2,\n    title: \"String (str)\",\n    type: \"theory\",\n    content: `\n# String (Teks)\n\nString = teks. Bisa pakai tanda kutip tunggal ('') atau ganda (\"\").\n\nOperasi:\n- Gabung: \"Py\" + \"thon\"\n- Ulang: \"ha\" * 3\n- Panjang: len(\"hello\")\n- Akses huruf: teks[0]\n                `,\n    codeExample: `s = \"Python\"\nprint(s[0])      # P\nprint(s[-1])     # n\nprint(len(s))    # 6\nprint(s.upper()) # PYTHON`,\n    expectedOutput: `P\nn\n6\nPYTHON`\n  }, {\n    id: 3,\n    title: \"Boolean (bool)\",\n    type: \"theory\",\n    content: `\n# Boolean\n\nTipe data logika, hanya ada:\n- True\n- False\n\nBiasanya hasil dari perbandingan.\n                `,\n    codeExample: `print(5 > 3)\nprint(10 == 2)\nis_active = True\nprint(is_active)`,\n    expectedOutput: `True\nFalse\nTrue`\n  }, {\n    id: 4,\n    title: \"List\",\n    type: \"theory\",\n    content: `\n# List\n\nList = kumpulan data berurutan. Bisa berisi campuran tipe.\n\nCiri: **pakai tanda kurung siku [ ]**\n                `,\n    codeExample: `angka = [1, 2, 3, 4]\ncampur = [1, \"halo\", True]\n\nprint(angka[0])     # akses elemen\nangka.append(5)     # tambah elemen\nprint(angka)`,\n    expectedOutput: `1\n[1, 2, 3, 4, 5]`\n  }, {\n    id: 5,\n    title: \"Tuple\",\n    type: \"theory\",\n    content: `\n# Tuple\n\nMirip list, tapi **tidak bisa diubah** (immutable).\n\nCiri: **pakai tanda kurung ( )**\n                `,\n    codeExample: `data = (10, 20, 30)\nprint(data[1])\n# data[1] = 99  # ‚ùå error, tuple immutable`,\n    expectedOutput: `20`\n  }, {\n    id: 6,\n    title: \"Set\",\n    type: \"theory\",\n    content: `\n# Set\n\nKumpulan data unik, **tidak berurutan**.\n\nCiri: **pakai tanda kurung kurawal { }**\n                `,\n    codeExample: `s = {1, 2, 3, 3, 2}\nprint(s)     # duplikat hilang\ns.add(4)\nprint(s)`,\n    expectedOutput: `{1, 2, 3}\n{1, 2, 3, 4}`\n  }, {\n    id: 7,\n    title: \"Dictionary (dict)\",\n    type: \"theory\",\n    content: `\n# Dictionary\n\nStruktur data **key ‚Üí value**.  \nMirip objek/map di bahasa lain.\n\nCiri: **pakai { key: value }**\n                `,\n    codeExample: `mhs = {\n    \"nama\": \"Zayen\",\n    \"umur\": 20,\n    \"jurusan\": \"Informatika\"\n}\nprint(mhs[\"nama\"])\nprint(mhs.get(\"umur\"))`,\n    expectedOutput: `Zayen\n20`\n  }, {\n    id: 8,\n    title: \"NoneType\",\n    type: \"theory\",\n    content: `\n# NoneType\n\nDipakai buat nilai kosong / belum ada.\n                `,\n    codeExample: `x = None\nprint(x)\nprint(type(x))`,\n    expectedOutput: `None\n<class 'NoneType'>`\n  }, {\n    id: 9,\n    title: \"Latihan\",\n    type: \"practice\",\n    content: `\n# Latihan Tipe Data\n\nCoba selesaikan soal berikut:\n1. Buat list berisi 5 nama, lalu tampilkan nama ke-3.\n2. Buat dict berisi data diri (nama, umur, hobi) dan tampilkan hobi.\n3. Cek apakah angka input dari user genap/ganjil pakai boolean.\n4. Buat set dari list [1,2,2,3,3,4,4] ‚Üí pastikan tidak ada duplikat.\n                `,\n    exercises: [{\n      id: 1,\n      title: \"List Nama\",\n      description: \"Buat list 5 nama, cetak nama ke-3.\",\n      hint: \"Ingat, index mulai dari 0.\",\n      solution: `nama = [\"Ali\", \"Budi\", \"Citra\", \"Dewi\", \"Eka\"]\nprint(nama[2])`\n    }, {\n      id: 2,\n      title: \"Dictionary Data Diri\",\n      description: \"Buat dict dengan nama, umur, dan hobi. Cetak hobi.\",\n      hint: \"Gunakan mhs['hobi'].\",\n      solution: `mhs = {\n    \"nama\": \"Zayen\",\n    \"umur\": 20,\n    \"hobi\": \"Coding\"\n}\nprint(mhs[\"hobi\"])`\n    }, {\n      id: 3,\n      title: \"Cek Genap/Ganjil\",\n      description: \"Input angka, cek genap/ganjil.\",\n      hint: \"Gunakan % 2 == 0.\",\n      solution: `n = int(input(\"Masukkan angka: \"))\nprint(n % 2 == 0)`\n    }, {\n      id: 4,\n      title: \"Set Unik\",\n      description: \"Ubah list [1,2,2,3,3,4,4] jadi set unik.\",\n      hint: \"Gunakan fungsi set().\",\n      solution: `data = [1,2,2,3,3,4,4]\nunik = set(data)\nprint(unik)`\n    }]\n  }]\n}, {\n  id: 6,\n  title: \"Casting Tipe Data di Python\",\n  description: \"Belajar cara mengubah tipe data (casting) di Python: int, float, str, dan bool. Lengkap dengan contoh dan latihan.\",\n  level: \"Pemula\",\n  duration: \"1.5 jam\",\n  lessons: 4,\n  progress: 0,\n  image: \"üîÑ\",\n  topics: [\"Apa Itu Casting?\", \"Casting ke Integer & Float\", \"Casting ke String & Boolean\", \"Latihan Praktik\"],\n  color: \"#6F00FF\",\n  content: [{\n    id: 1,\n    title: \"Apa Itu Casting?\",\n    type: \"theory\",\n    content: `\n# Apa Itu Casting?\n\n**Casting** = proses mengubah tipe data dari satu jenis ke jenis lain.\n\nKenapa perlu casting?\n- Input dari \\`input()\\` selalu berupa **string**.\n- Kadang kita perlu angka buat operasi matematika.\n- Atau sebaliknya, ubah angka jadi teks biar bisa digabung di print.\n                `\n  }, {\n    id: 2,\n    title: \"Casting ke Integer & Float\",\n    type: \"theory\",\n    content: `\n# Integer & Float\n\n- \\`int()\\` ‚Üí ubah ke bilangan bulat.\n- \\`float()\\` ‚Üí ubah ke bilangan desimal.\n\nContoh:\n                `,\n    codeExample: `# string ke int\nangka1 = int(\"10\")\nprint(angka1, type(angka1))\n\n# string ke float\nangka2 = float(\"3.14\")\nprint(angka2, type(angka2))\n\n# float ke int (desimal dibuang)\nangka3 = int(9.99)\nprint(angka3, type(angka3))`,\n    expectedOutput: `10 <class 'int'>\n3.14 <class 'float'>\n9 <class 'int'>`\n  }, {\n    id: 3,\n    title: \"Casting ke String & Boolean\",\n    type: \"theory\",\n    content: `\n# String & Boolean\n\n- \\`str()\\` ‚Üí ubah ke teks.\n- \\`bool()\\` ‚Üí ubah ke True/False.\n\nAturan bool:\n- 0, \"\", None ‚Üí False\n- Selain itu ‚Üí True\n                `,\n    codeExample: `# int ke string\numur = 20\nprint(\"Umurku \" + str(umur))\n\n# cek bool dari angka\nprint(bool(0))   # False\nprint(bool(5))   # True\n\n# cek bool dari string\nprint(bool(\"\"))   # False\nprint(bool(\"halo\"))  # True`,\n    expectedOutput: `Umurku 20\nFalse\nTrue\nFalse\nTrue`\n  }, {\n    id: 4,\n    title: \"Latihan Casting\",\n    type: \"practice\",\n    content: `\n# Latihan Casting\n\nCoba kerjain soal berikut:\n1. Minta input umur (string), ubah jadi int, lalu hitung tahun depan.\n2. Minta input angka desimal (float), ubah ke int, lalu tampilkan hasilnya.\n3. Buat program yang minta input teks, cek apakah teks kosong atau tidak (pakai bool()).\n                `,\n    exercises: [{\n      id: 1,\n      title: \"Umur Tahun Depan\",\n      description: \"Minta input umur (string), ubah ke int, lalu tampilkan umur tahun depan.\",\n      hint: \"Gunakan int() untuk konversi input.\",\n      solution: `umur = int(input(\"Masukkan umurmu: \"))\nprint(f\"Tahun depan umurmu {umur+1}\")`\n    }, {\n      id: 2,\n      title: \"Ubah Float ke Int\",\n      description: \"Input angka desimal (float), ubah ke integer.\",\n      hint: \"Gunakan float() lalu int().\",\n      solution: `angka = float(input(\"Masukkan angka desimal: \"))\nprint(\"Hasil casting ke int:\", int(angka))`\n    }, {\n      id: 3,\n      title: \"Cek String Kosong\",\n      description: \"Program cek apakah string kosong atau tidak.\",\n      hint: \"Gunakan bool() pada input string.\",\n      solution: `teks = input(\"Masukkan teks: \")\nif bool(teks):\n    print(\"Teks tidak kosong\")\nelse:\n    print(\"Teks kosong\")`\n    }]\n  }]\n}, {\n  id: 7,\n  title: \"Mengambil Input Data dari User\",\n  description: \"Belajar cara menerima input dari pengguna dengan fungsi input(), mengolahnya, dan menampilkannya kembali.\",\n  level: \"Pemula\",\n  duration: \"1.5 jam\",\n  lessons: 3,\n  progress: 0,\n  image: \"‚å®Ô∏è\",\n  topics: [\"Fungsi input()\", \"Konversi Tipe Data\", \"Latihan Praktik\"],\n  color: \"#F39F9F\",\n  content: [{\n    id: 1,\n    title: \"Fungsi input()\",\n    type: \"theory\",\n    content: `\n# Fungsi input()\n\nDi Python, kita bisa ambil data dari user pakai fungsi \\`input()\\`.\n\nContoh sederhana:\n\n\\`\\`\\`python\nnama = input(\"Siapa nama kamu? \")\nprint(\"Halo,\", nama)\n\\`\\`\\`\n\nKalau user ngetik \\`Zayen\\`, outputnya jadi:\n\n\\`\\`\\`\nSiapa nama kamu? Zayen\nHalo, Zayen\n\\`\\`\\`\n\n> Catatan: \\`input()\\` **selalu menghasilkan string (str)**, meskipun yang dimasukin angka.\n                `,\n    codeExample: `nama = input(\"Siapa nama kamu? \")\nprint(\"Halo,\", nama)`,\n    expectedOutput: `Siapa nama kamu? [User input]\nHalo, [User input]`\n  }, {\n    id: 2,\n    title: \"Konversi Tipe Data\",\n    type: \"theory\",\n    content: `\n# Konversi Input\n\nKarena \\`input()\\` selalu string, kita perlu konversi kalau butuh angka:\n\n- \\`int()\\` ‚Üí ubah ke bilangan bulat\n- \\`float()\\` ‚Üí ubah ke bilangan desimal\n\nContoh:\n\n\\`\\`\\`python\numur = int(input(\"Umur kamu berapa? \"))\ntinggi = float(input(\"Tinggi badan (m): \"))\n\nprint(\"Umur:\", umur)\nprint(\"Tinggi:\", tinggi)\n\\`\\`\\`\n\nOutput (kalau user masukin 20 dan 1.75):\n\n\\`\\`\\`\nUmur kamu berapa? 20\nTinggi badan (m): 1.75\nUmur: 20\nTinggi: 1.75\n\\`\\`\\`\n                `,\n    codeExample: `umur = int(input(\"Umur kamu berapa? \"))\ntinggi = float(input(\"Tinggi badan (m): \"))\n\nprint(\"Umur:\", umur)\nprint(\"Tinggi:\", tinggi)`,\n    expectedOutput: `Umur kamu berapa? [User input]\nTinggi badan (m): [User input]\nUmur: [angka]\nTinggi: [angka desimal]`\n  }, {\n    id: 3,\n    title: \"Latihan Praktik\",\n    type: \"practice\",\n    content: `\n# Latihan Input\n\nCoba kerjain soal berikut untuk melatih pemahamanmu tentang input() dan konversi tipe data:\n1. Buat program yang minta nama user lalu menyapanya.\n2. Buat program hitung umur di tahun depan.\n3. Buat program kalkulator luas persegi panjang dari input panjang & lebar.\n                `,\n    exercises: [{\n      id: 1,\n      title: \"Halo User\",\n      description: \"Minta input nama, lalu tampilkan sapaan.\",\n      hint: \"Gunakan input() dan print().\",\n      solution: `nama = input(\"Masukkan nama kamu: \")\nprint(f\"Halo, {nama}!\")`\n    }, {\n      id: 2,\n      title: \"Umur Tahun Depan\",\n      description: \"Minta umur user, lalu hitung umur tahun depan.\",\n      hint: \"Gunakan int() untuk konversi.\",\n      solution: `umur = int(input(\"Umur kamu berapa? \"))\nprint(f\"Tahun depan umurmu {umur + 1}\")`\n    }, {\n      id: 3,\n      title: \"Luas Persegi Panjang\",\n      description: \"Minta input panjang & lebar, hitung luasnya.\",\n      hint: \"Gunakan int() atau float() sesuai kebutuhan.\",\n      solution: `panjang = float(input(\"Masukkan panjang: \"))\nlebar = float(input(\"Masukkan lebar: \"))\nluas = panjang * lebar\nprint(f\"Luas persegi panjang = {luas}\")`\n    }]\n  }]\n}, {\n  id: 8,\n  title: \"Operasi Aritmatika di Python\",\n  description: \"Pelajari cara melakukan operasi matematika dasar di Python, mulai dari tambah, kurang, kali, bagi, sampai modulus dan pangkat.\",\n  level: \"Pemula\",\n  duration: \"1.5 jam\",\n  lessons: 5,\n  progress: 0,\n  image: \"‚ûï\",\n  topics: [\"Penjumlahan & Pengurangan\", \"Perkalian & Pembagian\", \"Modulus & Floor Division\", \"Pangkat\", \"Latihan Praktik\"],\n  color: \"#59AC77\",\n  content: [{\n    id: 1,\n    title: \"Penjumlahan & Pengurangan\",\n    type: \"theory\",\n    content: `\n# + dan -\n\nOperator paling basic di Python:\n- \\`+\\` untuk menambah\n- \\`-\\` untuk mengurangi\n                `,\n    codeExample: `a = 10\nb = 3\nprint(\"a + b =\", a + b)\nprint(\"a - b =\", a - b)`,\n    expectedOutput: `a + b = 13\na - b = 7`\n  }, {\n    id: 2,\n    title: \"Perkalian & Pembagian\",\n    type: \"theory\",\n    content: `\n# * dan /\n\n- \\`*\\` untuk perkalian  \n- \\`/\\` untuk pembagian (hasilnya float)  \n                `,\n    codeExample: `x = 7\ny = 2\nprint(\"x * y =\", x * y)\nprint(\"x / y =\", x / y)`,\n    expectedOutput: `x * y = 14\nx / y = 3.5`\n  }, {\n    id: 3,\n    title: \"Modulus & Floor Division\",\n    type: \"theory\",\n    content: `\n# % dan //\n\n- \\`%\\` modulus ‚Üí sisa bagi  \n- \\`//\\` floor division ‚Üí hasil bagi dibulatkan ke bawah\n                `,\n    codeExample: `print(\"7 % 3 =\", 7 % 3)\nprint(\"7 // 3 =\", 7 // 3)`,\n    expectedOutput: `7 % 3 = 1\n7 // 3 = 2`\n  }, {\n    id: 4,\n    title: \"Pangkat\",\n    type: \"theory\",\n    content: `\n# ** Pangkat\n\nGunakan \\`**\\` untuk pangkat.\n                `,\n    codeExample: `print(\"2 ** 3 =\", 2 ** 3)\nprint(\"5 ** 2 =\", 5 ** 2)`,\n    expectedOutput: `2 ** 3 = 8\n5 ** 2 = 25`\n  }, {\n    id: 5,\n    title: \"Latihan Praktik\",\n    type: \"practice\",\n    content: `\n# Latihan Operasi Aritmatika\n\nCoba kerjain soal berikut:\n1. Buat program yang minta 2 angka, lalu tampilkan hasil tambah, kurang, kali, bagi.  \n2. Minta input angka, tampilkan apakah dia habis dibagi 5 atau tidak.  \n3. Hitung luas persegi panjang dari input panjang dan lebar.  \n4. Hitung hasil pangkat dari angka dan eksponen yang dimasukkan user.\n                `,\n    exercises: [{\n      id: 1,\n      title: \"Kalkulator Mini\",\n      description: \"Input 2 angka, tampilkan hasil tambah, kurang, kali, bagi.\",\n      hint: \"Gunakan operator +, -, *, /\",\n      solution: `a = int(input(\"Masukkan angka pertama: \"))\nb = int(input(\"Masukkan angka kedua: \"))\n\nprint(\"Tambah:\", a + b)\nprint(\"Kurang:\", a - b)\nprint(\"Kali:\", a * b)\nprint(\"Bagi:\", a / b)`\n    }, {\n      id: 2,\n      title: \"Cek Kelipatan 5\",\n      description: \"Input angka, cek apakah habis dibagi 5.\",\n      hint: \"Gunakan operator % (modulus).\",\n      solution: `n = int(input(\"Masukkan angka: \"))\nif n % 5 == 0:\n    print(\"Angka ini kelipatan 5\")\nelse:\n    print(\"Bukan kelipatan 5\")`\n    }, {\n      id: 3,\n      title: \"Luas Persegi Panjang\",\n      description: \"Hitung luas persegi panjang dari input panjang dan lebar.\",\n      hint: \"Luas = panjang * lebar\",\n      solution: `p = int(input(\"Masukkan panjang: \"))\nl = int(input(\"Masukkan lebar: \"))\n\nluas = p * l\nprint(\"Luas persegi panjang:\", luas)`\n    }, {\n      id: 4,\n      title: \"Hitung Pangkat\",\n      description: \"Input angka dan eksponen, lalu hitung hasil pangkatnya.\",\n      hint: \"Gunakan operator **\",\n      solution: `angka = int(input(\"Masukkan angka: \"))\npangkat = int(input(\"Masukkan eksponen: \"))\n\nhasil = angka ** pangkat\nprint(f\"Hasil: {angka} ** {pangkat} = {hasil}\")`\n    }]\n  }]\n}, {\n  id: 9,\n  title: \"Latihan Perhitungan Sederhana\",\n  description: \"Praktik dasar matematika di Python: penjumlahan, pengurangan, perkalian, pembagian, modulus, dan latihan mini-kalkulator.\",\n  level: \"Pemula\",\n  duration: \"1.5 jam\",\n  lessons: 4,\n  progress: 0,\n  image: \"üßÆ\",\n  topics: [\"Penjumlahan & Pengurangan\", \"Perkalian & Pembagian\", \"Modulus & Pangkat\", \"Latihan Mini-Kalkulator\"],\n  color: \"#DC143C\",\n  content: [{\n    id: 1,\n    title: \"Penjumlahan & Pengurangan\",\n    type: \"theory\",\n    content: `\n# Penjumlahan (+) & Pengurangan (-)\n\nDua operasi paling basic dalam matematika.\n\n\\`\\`\\`python\na = 10\nb = 4\nprint(\"Penjumlahan:\", a + b)\nprint(\"Pengurangan:\", a - b)\n\\`\\`\\`\n                `,\n    codeExample: `a = 10\nb = 4\nprint(\"Penjumlahan:\", a + b)\nprint(\"Pengurangan:\", a - b)`,\n    expectedOutput: `Penjumlahan: 14\nPengurangan: 6`\n  }, {\n    id: 2,\n    title: \"Perkalian & Pembagian\",\n    type: \"theory\",\n    content: `\n# Perkalian (*) & Pembagian (/)  \n\n- * ‚Üí perkalian biasa  \n- / ‚Üí pembagian hasil desimal  \n- // ‚Üí pembagian bulat (dibulatkan ke bawah)\n\n\\`\\`\\`python\nx = 7\ny = 2\nprint(\"Kali:\", x * y)\nprint(\"Bagi:\", x / y)\nprint(\"Bagi Bulat:\", x // y)\n\\`\\`\\`\n                `,\n    codeExample: `x = 7\ny = 2\nprint(\"Kali:\", x * y)\nprint(\"Bagi:\", x / y)\nprint(\"Bagi Bulat:\", x // y)`,\n    expectedOutput: `Kali: 14\nBagi: 3.5\nBagi Bulat: 3`\n  }, {\n    id: 3,\n    title: \"Modulus & Pangkat\",\n    type: \"theory\",\n    content: `\n# Modulus (%) & Pangkat (**)\n\n- % ‚Üí sisa pembagian  \n- ** ‚Üí pangkat\n\n\\`\\`\\`python\nprint(\"Sisa bagi 10 % 3 =\", 10 % 3)\nprint(\"2 pangkat 4 =\", 2 ** 4)\n\\`\\`\\`\n                `,\n    codeExample: `print(\"Sisa bagi 10 % 3 =\", 10 % 3)\nprint(\"2 pangkat 4 =\", 2 ** 4)`,\n    expectedOutput: `Sisa bagi 10 % 3 = 1\n2 pangkat 4 = 16`\n  }, {\n    id: 4,\n    title: \"Latihan Mini-Kalkulator\",\n    type: \"practice\",\n    content: `\n# Latihan Perhitungan\n\nSekarang waktunya latihan. Buat program sederhana untuk menghitung beberapa operasi matematika.\n\n## Tantangan\n1. Input 2 angka dari user, lalu tampilkan hasil tambah, kurang, kali, dan bagi.  \n2. Buat program untuk mengecek apakah suatu angka habis dibagi 5 atau tidak.  \n3. Buat program yang menghitung kuadrat dan kubik dari angka yang diinput user.\n                `,\n    exercises: [{\n      id: 1,\n      title: \"Kalkulator 2 Angka\",\n      description: \"Minta 2 angka dari user, lalu tampilkan hasil operasi dasar.\",\n      hint: \"Gunakan input() + int().\",\n      solution: `a = int(input(\"Masukkan angka pertama: \"))\nb = int(input(\"Masukkan angka kedua: \"))\n\nprint(\"Tambah:\", a + b)\nprint(\"Kurang:\", a - b)\nprint(\"Kali:\", a * b)\nprint(\"Bagi:\", a / b)`\n    }, {\n      id: 2,\n      title: \"Cek Habis Dibagi 5\",\n      description: \"Input angka, cek apakah habis dibagi 5.\",\n      hint: \"Gunakan operator %.\",\n      solution: `n = int(input(\"Masukkan angka: \"))\nif n % 5 == 0:\n    print(\"Habis dibagi 5\")\nelse:\n    print(\"Tidak habis dibagi 5\")`\n    }, {\n      id: 3,\n      title: \"Kuadrat & Kubik\",\n      description: \"Hitung kuadrat (¬≤) dan kubik (¬≥) dari angka input.\",\n      hint: \"Gunakan operator **.\",\n      solution: `n = int(input(\"Masukkan angka: \"))\nprint(\"Kuadrat:\", n ** 2)\nprint(\"Kubik:\", n ** 3)`\n    }]\n  }]\n}, {\n  id: 10,\n  title: \"Operasi Komparasi\",\n  description: \"Belajar operator perbandingan di Python: ==, !=, >, <, >=, <=. Pahami gimana cara membandingkan nilai.\",\n  level: \"Pemula\",\n  duration: \"1 jam\",\n  lessons: 3,\n  progress: 0,\n  image: \"‚öñÔ∏è\",\n  topics: [\"Apa Itu Operator Komparasi?\", \"Contoh Pemakaian\", \"Latihan Soal\"],\n  color: \"#3396D3\",\n  content: [{\n    id: 1,\n    title: \"Apa Itu Operator Komparasi?\",\n    type: \"theory\",\n    content: `\n# Operator Komparasi\n\nOperator komparasi = operator buat **membandingkan** dua nilai.  \nHasilnya selalu berupa **boolean** (\\`True\\` atau \\`False\\`).\n\n## Daftar Operator\n- \\`==\\` ‚Üí sama dengan\n- \\`!=\\` ‚Üí tidak sama dengan\n- \\`>\\` ‚Üí lebih besar dari\n- \\`<\\` ‚Üí lebih kecil dari\n- \\`>=\\` ‚Üí lebih besar atau sama dengan\n- \\`<=\\` ‚Üí lebih kecil atau sama dengan\n                `\n  }, {\n    id: 2,\n    title: \"Contoh Pemakaian\",\n    type: \"theory\",\n    content: `\n# Contoh Operator Komparasi\n\nCoba bandingkan angka atau string:\n\n\\`\\`\\`python\na = 10\nb = 5\n\nprint(a == b)   # sama dengan\nprint(a != b)   # tidak sama dengan\nprint(a > b)    # lebih besar\nprint(a < b)    # lebih kecil\nprint(a >= 10)  # lebih besar/sama dengan\nprint(b <= 5)   # lebih kecil/sama dengan\n\n# Komparasi string\nprint(\"Python\" == \"python\")\nprint(\"A\" < \"B\")\n\\`\\`\\`\n\nOutputnya:\n\n\\`\\`\\`\nFalse\nTrue\nTrue\nFalse\nTrue\nTrue\nFalse\nTrue\n\\`\\`\\`\n                `,\n    codeExample: `a = 10\nb = 5\n\nprint(a == b)   # False\nprint(a != b)   # True\nprint(a > b)    # True\nprint(a < b)    # False\nprint(a >= 10)  # True\nprint(b <= 5)   # True\n\nprint(\"Python\" == \"python\") # False\nprint(\"A\" < \"B\")            # True`,\n    expectedOutput: `False\nTrue\nTrue\nFalse\nTrue\nTrue\nFalse\nTrue`\n  }, {\n    id: 3,\n    title: \"Latihan Operasi Komparasi\",\n    type: \"practice\",\n    content: `\n# Latihan Operasi Komparasi\n\nCoba kerjain soal berikut:\n1. Buat program yang minta input umur. Jika umur >= 18, tampilkan \"Dewasa\", selain itu \"Belum Dewasa\".\n2. Minta dua angka, cek apakah angka pertama lebih besar dari angka kedua.\n3. Cek apakah sebuah string input user sama dengan \"Python\" (case sensitive).\n                `,\n    exercises: [{\n      id: 1,\n      title: \"Cek Dewasa atau Belum\",\n      description: \"Input umur, tampilkan status dewasa atau belum.\",\n      hint: \"Gunakan operator >=.\",\n      solution: `umur = int(input(\"Masukkan umur: \"))\nif umur >= 18:\n    print(\"Dewasa\")\nelse:\n    print(\"Belum Dewasa\")`\n    }, {\n      id: 2,\n      title: \"Bandingkan Dua Angka\",\n      description: \"Input dua angka, cek apakah angka pertama lebih besar dari kedua.\",\n      hint: \"Gunakan >.\",\n      solution: `a = int(input(\"Angka pertama: \"))\nb = int(input(\"Angka kedua: \"))\n\nif a > b:\n    print(\"Angka pertama lebih besar\")\nelse:\n    print(\"Angka pertama tidak lebih besar\")`\n    }, {\n      id: 3,\n      title: \"Cek String Python\",\n      description: \"Input string, cek apakah sama dengan 'Python'.\",\n      hint: \"Gunakan operator ==.\",\n      solution: `kata = input(\"Masukkan kata: \")\n\nif kata == \"Python\":\n    print(\"Benar, itu Python!\")\nelse:\n    print(\"Bukan Python.\")`\n    }]\n  }]\n}, {\n  id: 11,\n  title: \"Operasi Logika & Boolean\",\n  description: \"Pelajari tipe data boolean (True/False), operator logika (and, or, not), serta cara menggunakannya dalam kondisi.\",\n  level: \"Pemula\",\n  duration: \"1.5 jam\",\n  lessons: 4,\n  progress: 0,\n  image: \"üîÄ\",\n  topics: [\"Apa itu Boolean?\", \"Operator Logika\", \"Perbandingan & Boolean\", \"Latihan Praktik\"],\n  color: \"#FFD93D\",\n  content: [{\n    id: 1,\n    title: \"Apa itu Boolean?\",\n    type: \"theory\",\n    content: `\n# Boolean di Python\n\nBoolean = tipe data yang hanya punya **dua nilai**:\n- \\`True\\`\n- \\`False\\`\n\nBiasanya dipakai untuk **logika / kondisi**.\n                `,\n    codeExample: `is_sunny = True\nis_raining = False\nprint(is_sunny, is_raining, type(is_sunny))`,\n    expectedOutput: `True False <class 'bool'>`\n  }, {\n    id: 2,\n    title: \"Operator Logika\",\n    type: \"theory\",\n    content: `\n# Operator Logika di Python\n\n- \\`and\\` ‚Üí True kalau **dua-duanya True**\n- \\`or\\` ‚Üí True kalau **minimal salah satu True**\n- \\`not\\` ‚Üí membalik nilai (True jadi False)\n\nTabel kebenaran (*truth table*):\n\n| A     | B     | A and B | A or B |\n|-------|-------|---------|--------|\n| True  | True  | True    | True   |\n| True  | False | False   | True   |\n| False | True  | False   | True   |\n| False | False | False   | False  |\n                `,\n    codeExample: `print(True and True)   # True\nprint(True and False)  # False\nprint(True or False)   # True\nprint(not True)        # False`,\n    expectedOutput: `True\nFalse\nTrue\nFalse`\n  }, {\n    id: 3,\n    title: \"Perbandingan & Boolean\",\n    type: \"theory\",\n    content: `\n# Boolean dari Operator Perbandingan\n\nHasil perbandingan di Python juga berupa Boolean.\n\n- \\`==\\` : sama dengan\n- \\`!=\\` : tidak sama dengan\n- \\`>\\`, \\`<\\` : lebih besar / kecil\n- \\`>=\\`, \\`<=\\` : lebih besar/kecil sama dengan\n                `,\n    codeExample: `x = 10\ny = 5\nprint(x > y)    # True\nprint(x == 10)  # True\nprint(y != 5)   # False`,\n    expectedOutput: `True\nTrue\nFalse`\n  }, {\n    id: 4,\n    title: \"Latihan Praktik\",\n    type: \"practice\",\n    content: `\n# Latihan Boolean & Logika\n\nCoba selesaikan soal berikut:\n1. Cek apakah angka positif DAN genap.\n2. Cek apakah nama yang dimasukkan adalah \"admin\" atau \"user\".\n3. Buat sistem login sederhana: username dan password benar ‚Üí akses diterima.\n                `,\n    exercises: [{\n      id: 1,\n      title: \"Positif & Genap\",\n      description: \"Input angka, cek apakah positif DAN genap.\",\n      hint: \"Gunakan operator and & modulus %.\",\n      solution: `n = int(input(\"Masukkan angka: \"))\nif n > 0 and n % 2 == 0:\n    print(\"Angka positif dan genap\")\nelse:\n    print(\"Tidak memenuhi syarat\")`\n    }, {\n      id: 2,\n      title: \"Cek Nama User\",\n      description: \"Input nama, cek apakah 'admin' atau 'user'.\",\n      hint: \"Gunakan operator or.\",\n      solution: `nama = input(\"Masukkan nama: \")\nif nama == \"admin\" or nama == \"user\":\n    print(\"Akses diterima\")\nelse:\n    print(\"Akses ditolak\")`\n    }, {\n      id: 3,\n      title: \"Sistem Login\",\n      description: \"Buat login dengan username='admin' dan password='1234'.\",\n      hint: \"Bandingkan string input dengan nilai yang ditentukan.\",\n      solution: `username = input(\"Username: \")\npassword = input(\"Password: \")\n\nif username == \"admin\" and password == \"1234\":\n    print(\"Login berhasil!\")\nelse:\n    print(\"Login gagal!\")`\n    }]\n  }]\n}, {\n  id: 12,\n  title: \"Latihan Komparasi dan Logika\",\n  description: \"Latihan pemahaman operator perbandingan dan logika di Python. Dari membandingkan angka hingga menggabungkan kondisi dengan AND, OR, dan NOT.\",\n  level: \"Menengah\",\n  duration: \"2 jam\",\n  lessons: 5,\n  progress: 0,\n  image: \"üß†\",\n  topics: [\"Operator Perbandingan\", \"Operator Logika\", \"Kombinasi Kondisi\", \"Latihan Kasus\", \"Soal Praktik\"],\n  color: \"#154D71\",\n  content: [{\n    id: 1,\n    title: \"Operator Perbandingan\",\n    type: \"theory\",\n    content: `\n# Operator Perbandingan\n\nDipakai untuk membandingkan dua nilai:\n\n- \\`==\\` sama dengan\n- \\`!=\\` tidak sama dengan\n- \\`>\\` lebih besar\n- \\`<\\` lebih kecil\n- \\`>=\\` lebih besar sama dengan\n- \\`<=\\` lebih kecil sama dengan\n\nHasilnya selalu \\`True\\` atau \\`False\\`.\n                `,\n    codeExample: `x = 10\ny = 7\nprint(x == y)   # False\nprint(x != y)   # True\nprint(x > y)    # True\nprint(x <= y)   # False`,\n    expectedOutput: `False\nTrue\nTrue\nFalse`\n  }, {\n    id: 2,\n    title: \"Operator Logika\",\n    type: \"theory\",\n    content: `\n# Operator Logika\n\nDipakai untuk menggabungkan kondisi:\n\n- \\`and\\` ‚Üí True jika semua kondisi True\n- \\`or\\` ‚Üí True jika salah satu kondisi True\n- \\`not\\` ‚Üí membalik nilai boolean\n                `,\n    codeExample: `x = 5\nprint(x > 0 and x < 10)   # True\nprint(x > 0 or x > 10)    # True\nprint(not (x > 0))        # False`,\n    expectedOutput: `True\nTrue\nFalse`\n  }, {\n    id: 3,\n    title: \"Kombinasi Kondisi\",\n    type: \"theory\",\n    content: `\n# Kombinasi Kondisi\n\nBisa digabung pakai tanda kurung buat logika yang lebih kompleks.\n                `,\n    codeExample: `umur = 20\npunya_ktp = True\n\nif umur >= 17 and punya_ktp:\n    print(\"Boleh bikin SIM\")\nelse:\n    print(\"Belum boleh\")`,\n    expectedOutput: `Boleh bikin SIM`\n  }, {\n    id: 4,\n    title: \"Latihan Kasus\",\n    type: \"theory\",\n    content: `\n# Contoh Kasus\n\nCek kelulusan ujian berdasarkan nilai:\n- Minimal 75 = Lulus\n- Kalau nilai < 75 = Gagal\n                `,\n    codeExample: `nilai = 80\nif nilai >= 75:\n    print(\"Lulus\")\nelse:\n    print(\"Gagal\")`,\n    expectedOutput: `Lulus`\n  }, {\n    id: 5,\n    title: \"Soal Praktik\",\n    type: \"practice\",\n    content: `\n# Latihan Operator Komparasi & Logika\n\nKerjain soal-soal ini biar makin jago:\n1. Cek apakah sebuah angka positif, negatif, atau nol.\n2. Minta umur user, cek apakah dia remaja (13‚Äì17) atau bukan.\n3. Program login sederhana (username & password).\n                `,\n    exercises: [{\n      id: 1,\n      title: \"Cek Angka Positif/Negatif\",\n      description: \"Input angka, tampilkan 'Positif', 'Negatif', atau 'Nol'.\",\n      hint: \"Gunakan if-elif-else.\",\n      solution: `n = int(input(\"Masukkan angka: \"))\nif n > 0:\n    print(\"Positif\")\nelif n < 0:\n    print(\"Negatif\")\nelse:\n    print(\"Nol\")`\n    }, {\n      id: 2,\n      title: \"Cek Usia Remaja\",\n      description: \"Input umur, cek apakah antara 13‚Äì17.\",\n      hint: \"Gunakan operator and.\",\n      solution: `umur = int(input(\"Umur kamu: \"))\nif umur >= 13 and umur <= 17:\n    print(\"Remaja\")\nelse:\n    print(\"Bukan remaja\")`\n    }, {\n      id: 3,\n      title: \"Program Login\",\n      description: \"Minta username dan password, cek apakah sesuai.\",\n      hint: \"Gunakan operator == pada string.\",\n      solution: `user = input(\"Username: \")\npw = input(\"Password: \")\n\nif user == \"admin\" and pw == \"1234\":\n    print(\"Login berhasil\")\nelse:\n    print(\"Login gagal\")`\n    }]\n  }]\n}, {\n  id: 13,\n  title: \"Operator Bitwise di Python\",\n  description: \"Pelajari cara kerja operator bitwise (AND, OR, XOR, NOT, shift) untuk memanipulasi data biner di Python.\",\n  level: \"Menengah\",\n  duration: \"1.5 jam\",\n  lessons: 6,\n  progress: 0,\n  image: \"üî¢\",\n  topics: [\"Apa Itu Bitwise?\", \"Operator AND (&)\", \"Operator OR (|)\", \"Operator XOR (^)\", \"Operator NOT (~)\", \"Shift Kiri & Kanan (<<, >>)\", \"Latihan\"],\n  color: \"#0046FF\",\n  content: [{\n    id: 1,\n    title: \"Apa Itu Bitwise?\",\n    type: \"theory\",\n    content: `\n# Apa Itu Operator Bitwise?\n\n- Operator bitwise bekerja pada **representasi biner** suatu angka.  \n- Angka di komputer disimpan dalam bentuk biner (0 dan 1).  \n- Bitwise memungkinkan manipulasi langsung tiap bit.\n\nContoh:\n- Angka 6 ‚Üí biner: 110\n- Angka 3 ‚Üí biner: 011\n                `\n  }, {\n    id: 2,\n    title: \"Operator AND (&)\",\n    type: \"theory\",\n    content: `\n# Operator AND (&)\n\nHasilnya 1 jika **kedua bit bernilai 1**, selain itu 0.\n\nContoh:\n- 6 (110)\n- 3 (011)\n- 6 & 3 ‚Üí 010 (hasil: 2)\n                `,\n    codeExample: `a = 6  # 110\nb = 3  # 011\nprint(a & b)`,\n    expectedOutput: `2`\n  }, {\n    id: 3,\n    title: \"Operator OR (|)\",\n    type: \"theory\",\n    content: `\n# Operator OR (|)\n\nHasilnya 1 jika **salah satu bit bernilai 1**.\n\nContoh:\n- 6 (110)\n- 3 (011)\n- 6 | 3 ‚Üí 111 (hasil: 7)\n                `,\n    codeExample: `a = 6\nb = 3\nprint(a | b)`,\n    expectedOutput: `7`\n  }, {\n    id: 4,\n    title: \"Operator XOR (^)\",\n    type: \"theory\",\n    content: `\n# Operator XOR (^)\n\nHasilnya 1 jika **kedua bit berbeda**.  \nKalau sama ‚Üí hasil 0.\n\nContoh:\n- 6 (110)\n- 3 (011)\n- 6 ^ 3 ‚Üí 101 (hasil: 5)\n                `,\n    codeExample: `a = 6\nb = 3\nprint(a ^ b)`,\n    expectedOutput: `5`\n  }, {\n    id: 5,\n    title: \"Operator NOT (~)\",\n    type: \"theory\",\n    content: `\n# Operator NOT (~)\n\nMembalik semua bit (0 jadi 1, 1 jadi 0).  \nDalam Python ‚Üí hasilnya = -(angka + 1).\n\nContoh:\n- ~6 = -(6+1) = -7\n                `,\n    codeExample: `a = 6\nprint(~a)`,\n    expectedOutput: `-7`\n  }, {\n    id: 6,\n    title: \"Shift Kiri (<<) & Kanan (>>)\",\n    type: \"theory\",\n    content: `\n# Operator Shift\n\n- **<< (kiri)**: geser bit ke kiri (sama dengan dikali 2).\n- **>> (kanan)**: geser bit ke kanan (sama dengan dibagi 2, dibulatkan).\n\nContoh:\n- 6 (110) << 1 ‚Üí 1100 (12)\n- 6 (110) >> 1 ‚Üí 11 (3)\n                `,\n    codeExample: `a = 6\nprint(a << 1)  # geser kiri\nprint(a >> 1)  # geser kanan`,\n    expectedOutput: `12\n3`\n  }, {\n    id: 7,\n    title: \"Latihan Operator Bitwise\",\n    type: \"practice\",\n    content: `\n# Latihan Operator Bitwise\n\nCoba kerjain soal ini biar makin paham:\n1. Buat program yang minta input dua angka, lalu tampilkan hasil AND, OR, XOR.\n2. Geser angka 15 ke kiri 2 kali, lalu ke kanan 1 kali.\n3. Buat fungsi untuk mengecek apakah sebuah angka **ganjil/genap** menggunakan operator bitwise.\n                `,\n    exercises: [{\n      id: 1,\n      title: \"Bitwise Kalkulator\",\n      description: \"Minta dua angka, tampilkan hasil AND, OR, XOR.\",\n      hint: \"Gunakan &, |, ^\",\n      solution: `a = int(input(\"Masukkan angka pertama: \"))\nb = int(input(\"Masukkan angka kedua: \"))\n\nprint(\"AND:\", a & b)\nprint(\"OR:\", a | b)\nprint(\"XOR:\", a ^ b)`\n    }, {\n      id: 2,\n      title: \"Geser Angka\",\n      description: \"Geser angka 15 ke kiri 2 kali, lalu ke kanan 1 kali.\",\n      hint: \"Gunakan << dan >>\",\n      solution: `x = 15\nprint(\"Geser kiri 2:\", x << 2)\nprint(\"Geser kanan 1:\", x >> 1)`\n    }, {\n      id: 3,\n      title: \"Cek Genap/Ganjil dengan Bitwise\",\n      description: \"Gunakan operator & untuk cek genap/ganjil.\",\n      hint: \"Angka genap ‚Üí bit terakhir = 0\",\n      solution: `def cek_genap_ganjil(n):\n    if n & 1 == 0:\n        print(\"Genap\")\n    else:\n        print(\"Ganjil\")\n\ncek_genap_ganjil(7)\ncek_genap_ganjil(10)`\n    }]\n  }]\n}, {\n  id: 14,\n  title: \"Operator Assignment di Python\",\n  description: \"Belajar gimana cara pakai operator assignment (=, +=, -=, dll) buat nyimpen dan update nilai variabel dengan cara singkat.\",\n  level: \"Pemula\",\n  duration: \"1 jam\",\n  lessons: 3,\n  progress: 0,\n  image: \"‚úçÔ∏è\",\n  topics: [\"Apa itu Operator Assignment?\", \"Macam-Macam Operator Assignment\", \"Latihan Praktik\"],\n  color: \"#5A9690\",\n  content: [{\n    id: 1,\n    title: \"Apa itu Operator Assignment?\",\n    type: \"theory\",\n    content: `\n# Operator Assignment\n\nOperator **assignment** itu dipakai buat **menyimpan nilai ke dalam variabel**.  \nSimbol utamanya adalah tanda sama dengan (=).\n\nContoh:\n\\`\\`\\`python\nx = 10\nprint(x) # 10\n\\`\\`\\`\n\nArtinya: *variabel x dikasih nilai 10.*\n\nSelain \"=\" biasa, Python juga punya bentuk assignment lain yang lebih singkat.  \nMisalnya: \n- \\`+=\\` buat nambah nilai ke variabel\n- \\`-=\\` buat ngurangin nilai variabel\n- dst.\n\nAssignment operator ini kaya shortcut biar kita ga nulis kode panjang.\n            `\n  }, {\n    id: 2,\n    title: \"Macam-Macam Operator Assignment\",\n    type: \"theory\",\n    content: `\n# Macam-Macam Operator Assignment di Python\n\nYuk kita liat satu-satu dengan contoh langsung:\n\n\\`\\`\\`python\nprint(\"==== Assignment Biasa ====\")\nx = 5\nprint(\"x =\", x)\n\nprint(\"\\\\n==== Tambah (+=) ====\")\nx = 5\nx += 3   # sama dengan x = x + 3\nprint(\"x =\", x)\n\nprint(\"\\\\n==== Kurang (-=) ====\")\nx = 10\nx -= 4\nprint(\"x =\", x)\n\nprint(\"\\\\n==== Kali (*=) ====\")\nx = 7\nx *= 2\nprint(\"x =\", x)\n\nprint(\"\\\\n==== Bagi (/=) ====\")\nx = 20\nx /= 5\nprint(\"x =\", x)\n\nprint(\"\\\\n==== Bagi Bulat (//=) ====\")\nx = 20\nx //= 3\nprint(\"x =\", x)\n\nprint(\"\\\\n==== Modulus (%=) ====\")\nx = 10\nx %= 3\nprint(\"x =\", x)\n\nprint(\"\\\\n==== Pangkat (**=) ====\")\nx = 2\nx **= 3\nprint(\"x =\", x)\n\\`\\`\\`\n\nOutput:\n\\`\\`\\`\n==== Assignment Biasa ====\nx = 5\n\n==== Tambah (+=) ====\nx = 8\n\n==== Kurang (-=) ====\nx = 6\n\n==== Kali (*=) ====\nx = 14\n\n==== Bagi (/=) ====\nx = 4.0\n\n==== Bagi Bulat (//=) ====\nx = 6\n\n==== Modulus (%=) ====\nx = 1\n\n==== Pangkat (**=) ====\nx = 8\n\\`\\`\\`\n\nSelain itu ada juga **operator assignment untuk bitwise** (jarang dipake di level pemula, tapi penting di level menengah):\n- \\`&=\\` (AND)\n- \\`|=\\` (OR)\n- \\`^=\\` (XOR)\n- \\`>>=\\` (geser kanan)\n- \\`<<=\\` (geser kiri)\n            `\n  }, {\n    id: 3,\n    title: \"Latihan Praktik\",\n    type: \"practice\",\n    content: `\n# Latihan Operator Assignment\n\nCoba kerjain soal berikut:\n\n1. Mulai dengan \\`x = 10\\`, lalu tambahkan 5 menggunakan operator assignment.\n2. Buat variabel \\`y = 50\\`, lalu kurangi 20 menggunakan \\`-=\\`.\n3. Buat variabel \\`z = 4\\`, kalikan dengan 3, lalu pangkatkan 2 (gunakan operator assignment).\n4. Simulasi tabungan: Mulai dengan saldo = 1000, lalu tambah 200, kurangi 150, dan kalikan 2 (karena dapet bonus). Tampilkan saldo akhir.\n            `,\n    exercises: [{\n      id: 1,\n      title: \"Tambah 5\",\n      description: \"Gunakan x = 10 lalu tambahkan 5 pakai operator assignment.\",\n      hint: \"Pakai +=.\",\n      solution: `x = 10\nx += 5\nprint(x)  # 15`\n    }, {\n      id: 2,\n      title: \"Kurangi 20\",\n      description: \"Buat y = 50, lalu kurangi 20.\",\n      hint: \"Pakai -=.\",\n      solution: `y = 50\ny -= 20\nprint(y)  # 30`\n    }, {\n      id: 3,\n      title: \"Kali dan Pangkat\",\n      description: \"Buat z = 4, kali 3 lalu pangkat 2.\",\n      hint: \"Gunakan *= dan **=.\",\n      solution: `z = 4\nz *= 3   # z = 12\nz **= 2  # z = 144\nprint(z)`\n    }, {\n      id: 4,\n      title: \"Simulasi Tabungan\",\n      description: \"Mulai dengan saldo = 1000, lalu +200, -150, √ó2.\",\n      hint: \"Urutkan pakai +=, -=, *=.\",\n      solution: `saldo = 1000\nsaldo += 200\nsaldo -= 150\nsaldo *= 2\nprint(saldo)  # 2100`\n    }]\n  }]\n}];\nexport default lessonCards;","map":{"version":3,"names":["lessonCards","id","title","description","level","duration","lessons","progress","image","topics","color","content","type","codeExample","expectedOutput","exercises","hint","solution"],"sources":["D:/Projects/React Js/python-learning/src/pages/pelajaran/pages/pelajaran/data/LessonCard.js"],"sourcesContent":["export const lessonCards = [\r\n    {\r\n        id: 1,\r\n        title: \"Apa Itu Python?\",\r\n        description: \"Kenalan dulu sama Python: sejarah singkat, kelebihan, kegunaan, dan kenapa banyak dipakai pemula maupun expert.\",\r\n        level: \"Pemula\",\r\n        duration: \"1 jam\",\r\n        lessons: 4,\r\n        progress: 0,\r\n        image: \"üêç\",\r\n        topics: [\r\n            \"Sejarah & Asal Usul\",\r\n            \"Kenapa Python Populer?\",\r\n            \"Bidang Penggunaan Python\",\r\n            \"Program Pertama: Hello World\"\r\n        ],\r\n        color: \"#10B981\",\r\n        content: [\r\n            {\r\n                id: 1,\r\n                title: \"Sejarah & Asal Usul\",\r\n                type: \"theory\",\r\n                content: `\r\n# Sejarah Python\r\n\r\nPython diciptakan oleh **Guido van Rossum** pada tahun 1991.  \r\nNama \"Python\" bukan dari ular, tapi terinspirasi dari acara komedi Inggris: *Monty Python's Flying Circus*.\r\n\r\nTujuannya: bikin bahasa pemrograman yang **mudah dibaca, sederhana, tapi powerful**.\r\n                `\r\n            },\r\n            {\r\n                id: 2,\r\n                title: \"Kenapa Python Populer?\",\r\n                type: \"theory\",\r\n                content: `\r\n# Kelebihan Python\r\n\r\n- Sintaks sederhana, mirip bahasa manusia.\r\n- Multi-purpose: bisa buat banyak hal.\r\n- Banyak library & framework siap pakai.\r\n- Komunitas besar, gampang cari bantuan.\r\n- Dipakai perusahaan besar (Google, Netflix, Instagram, NASA).\r\n                `\r\n            },\r\n            {\r\n                id: 3,\r\n                title: \"Bidang Penggunaan Python\",\r\n                type: \"theory\",\r\n                content: `\r\n# Python Dipakai di Mana Aja?\r\n\r\n1. **Web Development** ‚Üí Django, Flask, FastAPI  \r\n2. **Data Science & Machine Learning** ‚Üí Pandas, NumPy, TensorFlow, PyTorch  \r\n3. **Automation / Scripting** ‚Üí Bot, otomasi tugas kantor, scraping  \r\n4. **Game Development** ‚Üí Pygame  \r\n5. **AI & Big Data**  \r\n6. **Cyber Security** ‚Üí tools hacking & analisis keamanan  \r\n\r\nSingkatnya: Python bisa dipakai hampir di semua bidang IT.\r\n                `\r\n            },\r\n            {\r\n                id: 4,\r\n                title: \"Program Pertama: Hello World\",\r\n                type: \"theory\",\r\n                content: `\r\n# Program Pertama\r\n\r\nPython gampang banget.  \r\nCukup satu baris kode buat nyapa dunia:\r\n\r\n\\`\\`\\`python\r\nprint(\"Hello, World!\")\r\n\\`\\`\\`\r\n\r\nOutputnya:\r\n\r\n\\`\\`\\`\r\nHello, World!\r\n\\`\\`\\`\r\n                `,\r\n                codeExample: `print(\"Hello, World!\")`,\r\n                expectedOutput: `Hello, World!`\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: 2,\r\n        title: \"Instalasi Python & VS Code\",\r\n        description: \"Panduan install Python 3 dan Visual Studio Code di Windows & MacOS, termasuk setting awal biar siap ngoding.\",\r\n        level: \"Pemula\",\r\n        duration: \"1.5 jam\",\r\n        lessons: 4,\r\n        progress: 0,\r\n        image: \"üíª\",\r\n        topics: [\r\n            \"Download & Install Python di Windows\",\r\n            \"Download & Install Python di MacOS\",\r\n            \"Install Visual Studio Code\",\r\n            \"Setting Awal VS Code untuk Python\"\r\n        ],\r\n        color: \"#F59E0B\",\r\n        content: [\r\n            {\r\n                id: 1,\r\n                title: \"Install Python di Windows\",\r\n                type: \"theory\",\r\n                content: `\r\n# Python di Windows\r\n\r\n1. Download installer di [python.org/downloads](https://www.python.org/downloads/).  \r\n   Pilih versi **Python 3.x (bukan 2.x)**.  \r\n2. Jalankan installer.  \r\n   **PENTING**: Centang *\"Add Python to PATH\"* sebelum klik Install.  \r\n3. Setelah selesai, cek instalasi via Command Prompt (CMD):\r\n\r\n\\`\\`\\`bash\r\npython --version\r\n\\`\\`\\`\r\n\r\nKalau muncul versi Python, artinya sukses ‚úÖ\r\n                `\r\n            },\r\n            {\r\n                id: 2,\r\n                title: \"Install Python di MacOS\",\r\n                type: \"theory\",\r\n                content: `\r\n# Python di MacOS\r\n\r\n1. Buka [python.org/downloads](https://www.python.org/downloads/).  \r\n   Download versi terbaru Python 3 untuk MacOS.  \r\n2. Klik file .pkg ‚Üí ikuti wizard instalasi.  \r\n3. Cek instalasi via Terminal:\r\n\r\n\\`\\`\\`bash\r\npython3 --version\r\n\\`\\`\\`\r\n\r\n‚ö° Note: Di Mac, biasanya pakai \\`python3\\` (bukan \\`python\\`).\r\n                `\r\n            },\r\n            {\r\n                id: 3,\r\n                title: \"Install Visual Studio Code\",\r\n                type: \"theory\",\r\n                content: `\r\n# Visual Studio Code (VS Code)\r\n\r\n1. Download di [code.visualstudio.com](https://code.visualstudio.com/).  \r\n2. Install seperti biasa (Windows: Next ‚Üí Next ‚Üí Finish).  \r\n3. Buka VS Code, pilih tema favorit (dark mode biar cool üòé).\r\n                `\r\n            },\r\n            {\r\n                id: 4,\r\n                title: \"Setting Awal VS Code untuk Python\",\r\n                type: \"theory\",\r\n                content: `\r\n# Setup VS Code\r\n\r\n1. Buka VS Code ‚Üí masuk ke **Extensions** (Ctrl+Shift+X / Cmd+Shift+X).  \r\n2. Cari & install **Python Extension** (by Microsoft).  \r\n3. Buat file baru: \\`hello.py\\`.  \r\n4. Isi dengan kode:\r\n\r\n\\`\\`\\`python\r\nprint(\"Halo, Python dari VS Code!\")\r\n\\`\\`\\`\r\n\r\n5. Jalankan file dengan:\r\n   - Klik kanan ‚Üí Run Python File\r\n   - atau buka terminal: \\`python hello.py\\` (Windows), \\`python3 hello.py\\` (Mac).\r\n                `,\r\n                codeExample: `print(\"Halo, Python dari VS Code!\")`,\r\n                expectedOutput: `Halo, Python dari VS Code!`\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: 3,\r\n        title: \"Cara Kerja Program & Bytecode\",\r\n        description: \"Pelajari bagaimana Python menjalankan kode: dari source code, bytecode, hingga interpreter Python.\",\r\n        level: \"Pemula\",\r\n        duration: \"1.5 jam\",\r\n        lessons: 3,\r\n        progress: 0,\r\n        image: \"‚öôÔ∏è\",\r\n        topics: [\r\n            \"Dari Source Code ke Bytecode\",\r\n            \"Interpreter Python\",\r\n            \"Eksperimen Bytecode\"\r\n        ],\r\n        color: \"#F29E93\",\r\n        content: [\r\n            {\r\n                id: 1,\r\n                title: \"Dari Source Code ke Bytecode\",\r\n                type: \"theory\",\r\n                content: `\r\n# Dari Source Code ke Bytecode\r\n\r\nSaat kamu nulis file Python (misalnya \\`hello.py\\`), isinya masih **source code** alias teks biasa.\r\n\r\nProses eksekusi Python:\r\n1. Source code ‚Üí dikompilasi ke **bytecode** (instruksi level menengah).\r\n2. Bytecode ‚Üí dijalankan oleh **Python Virtual Machine (PVM)**.\r\n\r\n> Bytecode ini disimpan dalam file berekstensi **.pyc** di folder \\`__pycache__\\`.\r\n                `,\r\n                codeExample: `# hello.py\r\nprint(\"Hello, Python!\")`,\r\n                expectedOutput: `Hello, Python!`\r\n            },\r\n            {\r\n                id: 2,\r\n                title: \"Interpreter Python\",\r\n                type: \"theory\",\r\n                content: `\r\n# Interpreter Python\r\n\r\nBerbeda dengan bahasa yang *compiled* (kayak C++), Python itu **interpreted language**.\r\n\r\nArtinya:\r\n- Kode Python ‚Üí langsung diterjemahkan baris per baris oleh **interpreter**.\r\n- Interpreter yang dipakai mayoritas orang = **CPython** (implementasi resmi Python dalam C).\r\n\r\nJadi, flow-nya:\r\n\r\n\\`source code (.py)\\` ‚Üí \\`bytecode (.pyc)\\` ‚Üí \\`PVM\\` ‚Üí **output**.\r\n                `\r\n            },\r\n            {\r\n                id: 3,\r\n                title: \"Eksperimen Bytecode\",\r\n                type: \"theory\",\r\n                content: `\r\n# Eksperimen Bytecode\r\n\r\nKita bisa ngintip bytecode dari kode Python pakai modul \\`dis\\` (disassembler).\r\n\r\nContoh:\r\n                `,\r\n                codeExample: `import dis\r\n\r\ndef halo():\r\n    print(\"Halo Dunia\")\r\n\r\ndis.dis(halo)`,\r\n                expectedOutput: `  3           0 LOAD_GLOBAL              0 (print)\r\n              2 LOAD_CONST               1 ('Halo Dunia')\r\n              4 CALL_FUNCTION            1\r\n              6 POP_TOP\r\n              8 LOAD_CONST               0 (None)\r\n             10 RETURN_VALUE`\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: 4,\r\n        title: \"Mengenal Variabel\",\r\n        description: \"Belajar tentang variabel di Python: apa itu variabel, cara membuatnya, aturan penamaan, tipe data dasar, dan latihan praktik.\",\r\n        level: \"Pemula\",\r\n        duration: \"1.5 jam\",\r\n        lessons: 5,\r\n        progress: 0,\r\n        image: \"üì¶\",\r\n        topics: [\r\n            \"Apa Itu Variabel?\",\r\n            \"Membuat Variabel\",\r\n            \"Aturan Penamaan\",\r\n            \"Tipe Data Dasar\",\r\n            \"Latihan Praktik\"\r\n        ],\r\n        color: \"#3C467B\",\r\n        content: [\r\n            {\r\n                id: 1,\r\n                title: \"Apa Itu Variabel?\",\r\n                type: \"theory\",\r\n                content: `\r\n# Apa Itu Variabel?\r\n\r\nVariabel = **wadah untuk menyimpan data**.  \r\nBayangin variabel kayak kotak yang punya label, dan di dalamnya ada isinya.\r\n\r\nContoh:\r\n- Kotak bernama \\`umur\\` berisi angka 20.\r\n- Kotak bernama \\`nama\\` berisi teks \"Zayen\".\r\n                `,\r\n                codeExample: `umur = 20\r\nnama = \"Zayen\"\r\nprint(umur, nama)`,\r\n                expectedOutput: `20 Zayen`\r\n            },\r\n            {\r\n                id: 2,\r\n                title: \"Membuat Variabel\",\r\n                type: \"theory\",\r\n                content: `\r\n# Cara Membuat Variabel\r\n\r\nDi Python, bikin variabel **gampang banget**:\r\n- Tinggal tulis nama variabel = nilai\r\n- Gak perlu deklarasi tipe data (Python otomatis ngerti)\r\n\r\nContoh:\r\n\\`\\`\\`python\r\na = 10\r\nb = 3.14\r\nc = \"Halo\"\r\n\\`\\`\\`\r\n\r\nOutput:\r\n\\`\\`\\`\r\n10 3.14 Halo\r\n\\`\\`\\`\r\n                `,\r\n                codeExample: `a = 10\r\nb = 3.14\r\nc = \"Halo\"\r\nprint(a, b, c)`,\r\n                expectedOutput: `10 3.14 Halo`\r\n            },\r\n            {\r\n                id: 3,\r\n                title: \"Aturan Penamaan\",\r\n                type: \"theory\",\r\n                content: `\r\n# Aturan Nama Variabel\r\n\r\n‚úÖ Boleh:\r\n- Huruf, angka, underscore (\\_)\r\n- Huruf kecil/besar (case-sensitive)\r\n\r\n‚ùå Tidak boleh:\r\n- Diawali angka (contoh: \\`1nama\\`)\r\n- Pakai spasi (contoh: \\`nama saya\\`)\r\n- Pakai simbol aneh (contoh: \\`nama@\\`)\r\n\r\nüìå Best practice:\r\n- Gunakan huruf kecil: \\`umur\\`, \\`nama_lengkap\\`\r\n- Nama jelas & mudah dipahami\r\n                `,\r\n                codeExample: `nama_lengkap = \"Budi Setiawan\"\r\nUmur = 21  # ini beda sama 'umur'\r\nprint(nama_lengkap, Umur)`,\r\n                expectedOutput: `Budi Setiawan 21`\r\n            },\r\n            {\r\n                id: 4,\r\n                title: \"Tipe Data Dasar\",\r\n                type: \"theory\",\r\n                content: `\r\n# Tipe Data di Variabel\r\n\r\nPython punya beberapa tipe dasar:\r\n- \\`int\\` ‚Üí bilangan bulat\r\n- \\`float\\` ‚Üí bilangan desimal\r\n- \\`str\\` ‚Üí teks\r\n- \\`bool\\` ‚Üí True / False\r\n- \\`None\\` ‚Üí kosong\r\n\r\nGunakan fungsi \\`type()\\` untuk cek tipe data.\r\n                `,\r\n                codeExample: `x = 10\r\ny = 3.14\r\nz = \"Halo\"\r\nflag = True\r\nkosong = None\r\n\r\nprint(type(x))\r\nprint(type(y))\r\nprint(type(z))\r\nprint(type(flag))\r\nprint(type(kosong))`,\r\n                expectedOutput: `<class 'int'>\r\n<class 'float'>\r\n<class 'str'>\r\n<class 'bool'>\r\n<class 'NoneType'>`\r\n            },\r\n            {\r\n                id: 5,\r\n                title: \"Latihan Praktik\",\r\n                type: \"practice\",\r\n                content: `\r\n# Latihan Variabel\r\n\r\nCoba kerjain soal berikut:\r\n1. Buat variabel nama, umur, kota ‚Üí lalu tampilkan dalam satu kalimat.\r\n2. Simpan dua angka lalu tampilkan hasil penjumlahan.\r\n3. Cek tipe data dari variabel \\`angka\\`, \\`teks\\`, dan \\`status\\`.\r\n                `,\r\n                exercises: [\r\n                    {\r\n                        id: 1,\r\n                        title: \"Data Diri\",\r\n                        description: \"Buat variabel nama, umur, dan kota. Cetak dengan f-string: 'Halo, saya [nama], umur [umur], dari [kota]'.\",\r\n                        hint: \"Gunakan f-string.\",\r\n                        solution: `nama = \"Zayen\"\r\numur = 20\r\nkota = \"Jakarta\"\r\n\r\nprint(f\"Halo, saya {nama}, umur {umur}, dari {kota}\")`\r\n                    },\r\n                    {\r\n                        id: 2,\r\n                        title: \"Hitung Penjumlahan\",\r\n                        description: \"Simpan dua angka (misal a=7, b=5), lalu tampilkan hasil tambahannya.\",\r\n                        hint: \"Gunakan operator +.\",\r\n                        solution: `a = 7\r\nb = 5\r\nprint(\"Hasil penjumlahan:\", a + b)`\r\n                    },\r\n                    {\r\n                        id: 3,\r\n                        title: \"Cek Tipe Data\",\r\n                        description: \"Buat variabel angka=10, teks='Python', status=True. Cetak tipe data masing-masing.\",\r\n                        hint: \"Gunakan type().\",\r\n                        solution: `angka = 10\r\nteks = \"Python\"\r\nstatus = True\r\n\r\nprint(type(angka))\r\nprint(type(teks))\r\nprint(type(status))`\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: 5,\r\n        title: \"Tipe Data di Python\",\r\n        description: \"Belajar berbagai tipe data penting di Python: angka, string, boolean, list, tuple, set, dict, dan NoneType.\",\r\n        level: \"Pemula\",\r\n        duration: \"2 jam\",\r\n        lessons: 7,\r\n        progress: 0,\r\n        image: \"üì¶\",\r\n        topics: [\r\n            \"Angka (int & float)\",\r\n            \"String (str)\",\r\n            \"Boolean (bool)\",\r\n            \"List\",\r\n            \"Tuple\",\r\n            \"Set\",\r\n            \"Dictionary (dict)\",\r\n            \"NoneType\",\r\n            \"Latihan\"\r\n        ],\r\n        color: \"#FA812F\",\r\n        content: [\r\n            {\r\n                id: 1,\r\n                title: \"Angka (int & float)\",\r\n                type: \"theory\",\r\n                content: `\r\n# Angka (Number)\r\n\r\nPython punya 2 tipe angka utama:\r\n- **int** ‚Üí bilangan bulat (1, -5, 1000)\r\n- **float** ‚Üí bilangan desimal (3.14, -0.5)\r\n\r\nBisa dipakai buat operasi matematika.\r\n                `,\r\n                codeExample: `a = 10       # int\r\nb = 3.14     # float\r\nprint(a + b)\r\nprint(type(a), type(b))`,\r\n                expectedOutput: `13.14\r\n<class 'int'> <class 'float'>`\r\n            },\r\n            {\r\n                id: 2,\r\n                title: \"String (str)\",\r\n                type: \"theory\",\r\n                content: `\r\n# String (Teks)\r\n\r\nString = teks. Bisa pakai tanda kutip tunggal ('') atau ganda (\"\").\r\n\r\nOperasi:\r\n- Gabung: \"Py\" + \"thon\"\r\n- Ulang: \"ha\" * 3\r\n- Panjang: len(\"hello\")\r\n- Akses huruf: teks[0]\r\n                `,\r\n                codeExample: `s = \"Python\"\r\nprint(s[0])      # P\r\nprint(s[-1])     # n\r\nprint(len(s))    # 6\r\nprint(s.upper()) # PYTHON`,\r\n                expectedOutput: `P\r\nn\r\n6\r\nPYTHON`\r\n            },\r\n            {\r\n                id: 3,\r\n                title: \"Boolean (bool)\",\r\n                type: \"theory\",\r\n                content: `\r\n# Boolean\r\n\r\nTipe data logika, hanya ada:\r\n- True\r\n- False\r\n\r\nBiasanya hasil dari perbandingan.\r\n                `,\r\n                codeExample: `print(5 > 3)\r\nprint(10 == 2)\r\nis_active = True\r\nprint(is_active)`,\r\n                expectedOutput: `True\r\nFalse\r\nTrue`\r\n            },\r\n            {\r\n                id: 4,\r\n                title: \"List\",\r\n                type: \"theory\",\r\n                content: `\r\n# List\r\n\r\nList = kumpulan data berurutan. Bisa berisi campuran tipe.\r\n\r\nCiri: **pakai tanda kurung siku [ ]**\r\n                `,\r\n                codeExample: `angka = [1, 2, 3, 4]\r\ncampur = [1, \"halo\", True]\r\n\r\nprint(angka[0])     # akses elemen\r\nangka.append(5)     # tambah elemen\r\nprint(angka)`,\r\n                expectedOutput: `1\r\n[1, 2, 3, 4, 5]`\r\n            },\r\n            {\r\n                id: 5,\r\n                title: \"Tuple\",\r\n                type: \"theory\",\r\n                content: `\r\n# Tuple\r\n\r\nMirip list, tapi **tidak bisa diubah** (immutable).\r\n\r\nCiri: **pakai tanda kurung ( )**\r\n                `,\r\n                codeExample: `data = (10, 20, 30)\r\nprint(data[1])\r\n# data[1] = 99  # ‚ùå error, tuple immutable`,\r\n                expectedOutput: `20`\r\n            },\r\n            {\r\n                id: 6,\r\n                title: \"Set\",\r\n                type: \"theory\",\r\n                content: `\r\n# Set\r\n\r\nKumpulan data unik, **tidak berurutan**.\r\n\r\nCiri: **pakai tanda kurung kurawal { }**\r\n                `,\r\n                codeExample: `s = {1, 2, 3, 3, 2}\r\nprint(s)     # duplikat hilang\r\ns.add(4)\r\nprint(s)`,\r\n                expectedOutput: `{1, 2, 3}\r\n{1, 2, 3, 4}`\r\n            },\r\n            {\r\n                id: 7,\r\n                title: \"Dictionary (dict)\",\r\n                type: \"theory\",\r\n                content: `\r\n# Dictionary\r\n\r\nStruktur data **key ‚Üí value**.  \r\nMirip objek/map di bahasa lain.\r\n\r\nCiri: **pakai { key: value }**\r\n                `,\r\n                codeExample: `mhs = {\r\n    \"nama\": \"Zayen\",\r\n    \"umur\": 20,\r\n    \"jurusan\": \"Informatika\"\r\n}\r\nprint(mhs[\"nama\"])\r\nprint(mhs.get(\"umur\"))`,\r\n                expectedOutput: `Zayen\r\n20`\r\n            },\r\n            {\r\n                id: 8,\r\n                title: \"NoneType\",\r\n                type: \"theory\",\r\n                content: `\r\n# NoneType\r\n\r\nDipakai buat nilai kosong / belum ada.\r\n                `,\r\n                codeExample: `x = None\r\nprint(x)\r\nprint(type(x))`,\r\n                expectedOutput: `None\r\n<class 'NoneType'>`\r\n            },\r\n            {\r\n                id: 9,\r\n                title: \"Latihan\",\r\n                type: \"practice\",\r\n                content: `\r\n# Latihan Tipe Data\r\n\r\nCoba selesaikan soal berikut:\r\n1. Buat list berisi 5 nama, lalu tampilkan nama ke-3.\r\n2. Buat dict berisi data diri (nama, umur, hobi) dan tampilkan hobi.\r\n3. Cek apakah angka input dari user genap/ganjil pakai boolean.\r\n4. Buat set dari list [1,2,2,3,3,4,4] ‚Üí pastikan tidak ada duplikat.\r\n                `,\r\n                exercises: [\r\n                    {\r\n                        id: 1,\r\n                        title: \"List Nama\",\r\n                        description: \"Buat list 5 nama, cetak nama ke-3.\",\r\n                        hint: \"Ingat, index mulai dari 0.\",\r\n                        solution: `nama = [\"Ali\", \"Budi\", \"Citra\", \"Dewi\", \"Eka\"]\r\nprint(nama[2])`\r\n                    },\r\n                    {\r\n                        id: 2,\r\n                        title: \"Dictionary Data Diri\",\r\n                        description: \"Buat dict dengan nama, umur, dan hobi. Cetak hobi.\",\r\n                        hint: \"Gunakan mhs['hobi'].\",\r\n                        solution: `mhs = {\r\n    \"nama\": \"Zayen\",\r\n    \"umur\": 20,\r\n    \"hobi\": \"Coding\"\r\n}\r\nprint(mhs[\"hobi\"])`\r\n                    },\r\n                    {\r\n                        id: 3,\r\n                        title: \"Cek Genap/Ganjil\",\r\n                        description: \"Input angka, cek genap/ganjil.\",\r\n                        hint: \"Gunakan % 2 == 0.\",\r\n                        solution: `n = int(input(\"Masukkan angka: \"))\r\nprint(n % 2 == 0)`\r\n                    },\r\n                    {\r\n                        id: 4,\r\n                        title: \"Set Unik\",\r\n                        description: \"Ubah list [1,2,2,3,3,4,4] jadi set unik.\",\r\n                        hint: \"Gunakan fungsi set().\",\r\n                        solution: `data = [1,2,2,3,3,4,4]\r\nunik = set(data)\r\nprint(unik)`\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: 6,\r\n        title: \"Casting Tipe Data di Python\",\r\n        description: \"Belajar cara mengubah tipe data (casting) di Python: int, float, str, dan bool. Lengkap dengan contoh dan latihan.\",\r\n        level: \"Pemula\",\r\n        duration: \"1.5 jam\",\r\n        lessons: 4,\r\n        progress: 0,\r\n        image: \"üîÑ\",\r\n        topics: [\r\n            \"Apa Itu Casting?\",\r\n            \"Casting ke Integer & Float\",\r\n            \"Casting ke String & Boolean\",\r\n            \"Latihan Praktik\"\r\n        ],\r\n        color: \"#6F00FF\",\r\n        content: [\r\n            {\r\n                id: 1,\r\n                title: \"Apa Itu Casting?\",\r\n                type: \"theory\",\r\n                content: `\r\n# Apa Itu Casting?\r\n\r\n**Casting** = proses mengubah tipe data dari satu jenis ke jenis lain.\r\n\r\nKenapa perlu casting?\r\n- Input dari \\`input()\\` selalu berupa **string**.\r\n- Kadang kita perlu angka buat operasi matematika.\r\n- Atau sebaliknya, ubah angka jadi teks biar bisa digabung di print.\r\n                `\r\n            },\r\n            {\r\n                id: 2,\r\n                title: \"Casting ke Integer & Float\",\r\n                type: \"theory\",\r\n                content: `\r\n# Integer & Float\r\n\r\n- \\`int()\\` ‚Üí ubah ke bilangan bulat.\r\n- \\`float()\\` ‚Üí ubah ke bilangan desimal.\r\n\r\nContoh:\r\n                `,\r\n                codeExample: `# string ke int\r\nangka1 = int(\"10\")\r\nprint(angka1, type(angka1))\r\n\r\n# string ke float\r\nangka2 = float(\"3.14\")\r\nprint(angka2, type(angka2))\r\n\r\n# float ke int (desimal dibuang)\r\nangka3 = int(9.99)\r\nprint(angka3, type(angka3))`,\r\n                expectedOutput: `10 <class 'int'>\r\n3.14 <class 'float'>\r\n9 <class 'int'>`\r\n            },\r\n            {\r\n                id: 3,\r\n                title: \"Casting ke String & Boolean\",\r\n                type: \"theory\",\r\n                content: `\r\n# String & Boolean\r\n\r\n- \\`str()\\` ‚Üí ubah ke teks.\r\n- \\`bool()\\` ‚Üí ubah ke True/False.\r\n\r\nAturan bool:\r\n- 0, \"\", None ‚Üí False\r\n- Selain itu ‚Üí True\r\n                `,\r\n                codeExample: `# int ke string\r\numur = 20\r\nprint(\"Umurku \" + str(umur))\r\n\r\n# cek bool dari angka\r\nprint(bool(0))   # False\r\nprint(bool(5))   # True\r\n\r\n# cek bool dari string\r\nprint(bool(\"\"))   # False\r\nprint(bool(\"halo\"))  # True`,\r\n                expectedOutput: `Umurku 20\r\nFalse\r\nTrue\r\nFalse\r\nTrue`\r\n            },\r\n            {\r\n                id: 4,\r\n                title: \"Latihan Casting\",\r\n                type: \"practice\",\r\n                content: `\r\n# Latihan Casting\r\n\r\nCoba kerjain soal berikut:\r\n1. Minta input umur (string), ubah jadi int, lalu hitung tahun depan.\r\n2. Minta input angka desimal (float), ubah ke int, lalu tampilkan hasilnya.\r\n3. Buat program yang minta input teks, cek apakah teks kosong atau tidak (pakai bool()).\r\n                `,\r\n                exercises: [\r\n                    {\r\n                        id: 1,\r\n                        title: \"Umur Tahun Depan\",\r\n                        description: \"Minta input umur (string), ubah ke int, lalu tampilkan umur tahun depan.\",\r\n                        hint: \"Gunakan int() untuk konversi input.\",\r\n                        solution: `umur = int(input(\"Masukkan umurmu: \"))\r\nprint(f\"Tahun depan umurmu {umur+1}\")`\r\n                    },\r\n                    {\r\n                        id: 2,\r\n                        title: \"Ubah Float ke Int\",\r\n                        description: \"Input angka desimal (float), ubah ke integer.\",\r\n                        hint: \"Gunakan float() lalu int().\",\r\n                        solution: `angka = float(input(\"Masukkan angka desimal: \"))\r\nprint(\"Hasil casting ke int:\", int(angka))`\r\n                    },\r\n                    {\r\n                        id: 3,\r\n                        title: \"Cek String Kosong\",\r\n                        description: \"Program cek apakah string kosong atau tidak.\",\r\n                        hint: \"Gunakan bool() pada input string.\",\r\n                        solution: `teks = input(\"Masukkan teks: \")\r\nif bool(teks):\r\n    print(\"Teks tidak kosong\")\r\nelse:\r\n    print(\"Teks kosong\")`\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: 7,\r\n        title: \"Mengambil Input Data dari User\",\r\n        description: \"Belajar cara menerima input dari pengguna dengan fungsi input(), mengolahnya, dan menampilkannya kembali.\",\r\n        level: \"Pemula\",\r\n        duration: \"1.5 jam\",\r\n        lessons: 3,\r\n        progress: 0,\r\n        image: \"‚å®Ô∏è\",\r\n        topics: [\r\n            \"Fungsi input()\",\r\n            \"Konversi Tipe Data\",\r\n            \"Latihan Praktik\"\r\n        ],\r\n        color: \"#F39F9F\",\r\n        content: [\r\n            {\r\n                id: 1,\r\n                title: \"Fungsi input()\",\r\n                type: \"theory\",\r\n                content: `\r\n# Fungsi input()\r\n\r\nDi Python, kita bisa ambil data dari user pakai fungsi \\`input()\\`.\r\n\r\nContoh sederhana:\r\n\r\n\\`\\`\\`python\r\nnama = input(\"Siapa nama kamu? \")\r\nprint(\"Halo,\", nama)\r\n\\`\\`\\`\r\n\r\nKalau user ngetik \\`Zayen\\`, outputnya jadi:\r\n\r\n\\`\\`\\`\r\nSiapa nama kamu? Zayen\r\nHalo, Zayen\r\n\\`\\`\\`\r\n\r\n> Catatan: \\`input()\\` **selalu menghasilkan string (str)**, meskipun yang dimasukin angka.\r\n                `,\r\n                codeExample: `nama = input(\"Siapa nama kamu? \")\r\nprint(\"Halo,\", nama)`,\r\n                expectedOutput: `Siapa nama kamu? [User input]\r\nHalo, [User input]`\r\n            },\r\n            {\r\n                id: 2,\r\n                title: \"Konversi Tipe Data\",\r\n                type: \"theory\",\r\n                content: `\r\n# Konversi Input\r\n\r\nKarena \\`input()\\` selalu string, kita perlu konversi kalau butuh angka:\r\n\r\n- \\`int()\\` ‚Üí ubah ke bilangan bulat\r\n- \\`float()\\` ‚Üí ubah ke bilangan desimal\r\n\r\nContoh:\r\n\r\n\\`\\`\\`python\r\numur = int(input(\"Umur kamu berapa? \"))\r\ntinggi = float(input(\"Tinggi badan (m): \"))\r\n\r\nprint(\"Umur:\", umur)\r\nprint(\"Tinggi:\", tinggi)\r\n\\`\\`\\`\r\n\r\nOutput (kalau user masukin 20 dan 1.75):\r\n\r\n\\`\\`\\`\r\nUmur kamu berapa? 20\r\nTinggi badan (m): 1.75\r\nUmur: 20\r\nTinggi: 1.75\r\n\\`\\`\\`\r\n                `,\r\n                codeExample: `umur = int(input(\"Umur kamu berapa? \"))\r\ntinggi = float(input(\"Tinggi badan (m): \"))\r\n\r\nprint(\"Umur:\", umur)\r\nprint(\"Tinggi:\", tinggi)`,\r\n                expectedOutput: `Umur kamu berapa? [User input]\r\nTinggi badan (m): [User input]\r\nUmur: [angka]\r\nTinggi: [angka desimal]`\r\n            },\r\n            {\r\n                id: 3,\r\n                title: \"Latihan Praktik\",\r\n                type: \"practice\",\r\n                content: `\r\n# Latihan Input\r\n\r\nCoba kerjain soal berikut untuk melatih pemahamanmu tentang input() dan konversi tipe data:\r\n1. Buat program yang minta nama user lalu menyapanya.\r\n2. Buat program hitung umur di tahun depan.\r\n3. Buat program kalkulator luas persegi panjang dari input panjang & lebar.\r\n                `,\r\n                exercises: [\r\n                    {\r\n                        id: 1,\r\n                        title: \"Halo User\",\r\n                        description: \"Minta input nama, lalu tampilkan sapaan.\",\r\n                        hint: \"Gunakan input() dan print().\",\r\n                        solution: `nama = input(\"Masukkan nama kamu: \")\r\nprint(f\"Halo, {nama}!\")`\r\n                    },\r\n                    {\r\n                        id: 2,\r\n                        title: \"Umur Tahun Depan\",\r\n                        description: \"Minta umur user, lalu hitung umur tahun depan.\",\r\n                        hint: \"Gunakan int() untuk konversi.\",\r\n                        solution: `umur = int(input(\"Umur kamu berapa? \"))\r\nprint(f\"Tahun depan umurmu {umur + 1}\")`\r\n                    },\r\n                    {\r\n                        id: 3,\r\n                        title: \"Luas Persegi Panjang\",\r\n                        description: \"Minta input panjang & lebar, hitung luasnya.\",\r\n                        hint: \"Gunakan int() atau float() sesuai kebutuhan.\",\r\n                        solution: `panjang = float(input(\"Masukkan panjang: \"))\r\nlebar = float(input(\"Masukkan lebar: \"))\r\nluas = panjang * lebar\r\nprint(f\"Luas persegi panjang = {luas}\")`\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: 8,\r\n        title: \"Operasi Aritmatika di Python\",\r\n        description: \"Pelajari cara melakukan operasi matematika dasar di Python, mulai dari tambah, kurang, kali, bagi, sampai modulus dan pangkat.\",\r\n        level: \"Pemula\",\r\n        duration: \"1.5 jam\",\r\n        lessons: 5,\r\n        progress: 0,\r\n        image: \"‚ûï\",\r\n        topics: [\r\n            \"Penjumlahan & Pengurangan\",\r\n            \"Perkalian & Pembagian\",\r\n            \"Modulus & Floor Division\",\r\n            \"Pangkat\",\r\n            \"Latihan Praktik\"\r\n        ],\r\n        color: \"#59AC77\",\r\n        content: [\r\n            {\r\n                id: 1,\r\n                title: \"Penjumlahan & Pengurangan\",\r\n                type: \"theory\",\r\n                content: `\r\n# + dan -\r\n\r\nOperator paling basic di Python:\r\n- \\`+\\` untuk menambah\r\n- \\`-\\` untuk mengurangi\r\n                `,\r\n                codeExample: `a = 10\r\nb = 3\r\nprint(\"a + b =\", a + b)\r\nprint(\"a - b =\", a - b)`,\r\n                expectedOutput: `a + b = 13\r\na - b = 7`\r\n            },\r\n            {\r\n                id: 2,\r\n                title: \"Perkalian & Pembagian\",\r\n                type: \"theory\",\r\n                content: `\r\n# * dan /\r\n\r\n- \\`*\\` untuk perkalian  \r\n- \\`/\\` untuk pembagian (hasilnya float)  \r\n                `,\r\n                codeExample: `x = 7\r\ny = 2\r\nprint(\"x * y =\", x * y)\r\nprint(\"x / y =\", x / y)`,\r\n                expectedOutput: `x * y = 14\r\nx / y = 3.5`\r\n            },\r\n            {\r\n                id: 3,\r\n                title: \"Modulus & Floor Division\",\r\n                type: \"theory\",\r\n                content: `\r\n# % dan //\r\n\r\n- \\`%\\` modulus ‚Üí sisa bagi  \r\n- \\`//\\` floor division ‚Üí hasil bagi dibulatkan ke bawah\r\n                `,\r\n                codeExample: `print(\"7 % 3 =\", 7 % 3)\r\nprint(\"7 // 3 =\", 7 // 3)`,\r\n                expectedOutput: `7 % 3 = 1\r\n7 // 3 = 2`\r\n            },\r\n            {\r\n                id: 4,\r\n                title: \"Pangkat\",\r\n                type: \"theory\",\r\n                content: `\r\n# ** Pangkat\r\n\r\nGunakan \\`**\\` untuk pangkat.\r\n                `,\r\n                codeExample: `print(\"2 ** 3 =\", 2 ** 3)\r\nprint(\"5 ** 2 =\", 5 ** 2)`,\r\n                expectedOutput: `2 ** 3 = 8\r\n5 ** 2 = 25`\r\n            },\r\n            {\r\n                id: 5,\r\n                title: \"Latihan Praktik\",\r\n                type: \"practice\",\r\n                content: `\r\n# Latihan Operasi Aritmatika\r\n\r\nCoba kerjain soal berikut:\r\n1. Buat program yang minta 2 angka, lalu tampilkan hasil tambah, kurang, kali, bagi.  \r\n2. Minta input angka, tampilkan apakah dia habis dibagi 5 atau tidak.  \r\n3. Hitung luas persegi panjang dari input panjang dan lebar.  \r\n4. Hitung hasil pangkat dari angka dan eksponen yang dimasukkan user.\r\n                `,\r\n                exercises: [\r\n                    {\r\n                        id: 1,\r\n                        title: \"Kalkulator Mini\",\r\n                        description: \"Input 2 angka, tampilkan hasil tambah, kurang, kali, bagi.\",\r\n                        hint: \"Gunakan operator +, -, *, /\",\r\n                        solution: `a = int(input(\"Masukkan angka pertama: \"))\r\nb = int(input(\"Masukkan angka kedua: \"))\r\n\r\nprint(\"Tambah:\", a + b)\r\nprint(\"Kurang:\", a - b)\r\nprint(\"Kali:\", a * b)\r\nprint(\"Bagi:\", a / b)`\r\n                    },\r\n                    {\r\n                        id: 2,\r\n                        title: \"Cek Kelipatan 5\",\r\n                        description: \"Input angka, cek apakah habis dibagi 5.\",\r\n                        hint: \"Gunakan operator % (modulus).\",\r\n                        solution: `n = int(input(\"Masukkan angka: \"))\r\nif n % 5 == 0:\r\n    print(\"Angka ini kelipatan 5\")\r\nelse:\r\n    print(\"Bukan kelipatan 5\")`\r\n                    },\r\n                    {\r\n                        id: 3,\r\n                        title: \"Luas Persegi Panjang\",\r\n                        description: \"Hitung luas persegi panjang dari input panjang dan lebar.\",\r\n                        hint: \"Luas = panjang * lebar\",\r\n                        solution: `p = int(input(\"Masukkan panjang: \"))\r\nl = int(input(\"Masukkan lebar: \"))\r\n\r\nluas = p * l\r\nprint(\"Luas persegi panjang:\", luas)`\r\n                    },\r\n                    {\r\n                        id: 4,\r\n                        title: \"Hitung Pangkat\",\r\n                        description: \"Input angka dan eksponen, lalu hitung hasil pangkatnya.\",\r\n                        hint: \"Gunakan operator **\",\r\n                        solution: `angka = int(input(\"Masukkan angka: \"))\r\npangkat = int(input(\"Masukkan eksponen: \"))\r\n\r\nhasil = angka ** pangkat\r\nprint(f\"Hasil: {angka} ** {pangkat} = {hasil}\")`\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: 9,\r\n        title: \"Latihan Perhitungan Sederhana\",\r\n        description: \"Praktik dasar matematika di Python: penjumlahan, pengurangan, perkalian, pembagian, modulus, dan latihan mini-kalkulator.\",\r\n        level: \"Pemula\",\r\n        duration: \"1.5 jam\",\r\n        lessons: 4,\r\n        progress: 0,\r\n        image: \"üßÆ\",\r\n        topics: [\r\n            \"Penjumlahan & Pengurangan\",\r\n            \"Perkalian & Pembagian\",\r\n            \"Modulus & Pangkat\",\r\n            \"Latihan Mini-Kalkulator\"\r\n        ],\r\n        color: \"#DC143C\",\r\n        content: [\r\n            {\r\n                id: 1,\r\n                title: \"Penjumlahan & Pengurangan\",\r\n                type: \"theory\",\r\n                content: `\r\n# Penjumlahan (+) & Pengurangan (-)\r\n\r\nDua operasi paling basic dalam matematika.\r\n\r\n\\`\\`\\`python\r\na = 10\r\nb = 4\r\nprint(\"Penjumlahan:\", a + b)\r\nprint(\"Pengurangan:\", a - b)\r\n\\`\\`\\`\r\n                `,\r\n                codeExample: `a = 10\r\nb = 4\r\nprint(\"Penjumlahan:\", a + b)\r\nprint(\"Pengurangan:\", a - b)`,\r\n                expectedOutput: `Penjumlahan: 14\r\nPengurangan: 6`\r\n            },\r\n            {\r\n                id: 2,\r\n                title: \"Perkalian & Pembagian\",\r\n                type: \"theory\",\r\n                content: `\r\n# Perkalian (*) & Pembagian (/)  \r\n\r\n- * ‚Üí perkalian biasa  \r\n- / ‚Üí pembagian hasil desimal  \r\n- // ‚Üí pembagian bulat (dibulatkan ke bawah)\r\n\r\n\\`\\`\\`python\r\nx = 7\r\ny = 2\r\nprint(\"Kali:\", x * y)\r\nprint(\"Bagi:\", x / y)\r\nprint(\"Bagi Bulat:\", x // y)\r\n\\`\\`\\`\r\n                `,\r\n                codeExample: `x = 7\r\ny = 2\r\nprint(\"Kali:\", x * y)\r\nprint(\"Bagi:\", x / y)\r\nprint(\"Bagi Bulat:\", x // y)`,\r\n                expectedOutput: `Kali: 14\r\nBagi: 3.5\r\nBagi Bulat: 3`\r\n            },\r\n            {\r\n                id: 3,\r\n                title: \"Modulus & Pangkat\",\r\n                type: \"theory\",\r\n                content: `\r\n# Modulus (%) & Pangkat (**)\r\n\r\n- % ‚Üí sisa pembagian  \r\n- ** ‚Üí pangkat\r\n\r\n\\`\\`\\`python\r\nprint(\"Sisa bagi 10 % 3 =\", 10 % 3)\r\nprint(\"2 pangkat 4 =\", 2 ** 4)\r\n\\`\\`\\`\r\n                `,\r\n                codeExample: `print(\"Sisa bagi 10 % 3 =\", 10 % 3)\r\nprint(\"2 pangkat 4 =\", 2 ** 4)`,\r\n                expectedOutput: `Sisa bagi 10 % 3 = 1\r\n2 pangkat 4 = 16`\r\n            },\r\n            {\r\n                id: 4,\r\n                title: \"Latihan Mini-Kalkulator\",\r\n                type: \"practice\",\r\n                content: `\r\n# Latihan Perhitungan\r\n\r\nSekarang waktunya latihan. Buat program sederhana untuk menghitung beberapa operasi matematika.\r\n\r\n## Tantangan\r\n1. Input 2 angka dari user, lalu tampilkan hasil tambah, kurang, kali, dan bagi.  \r\n2. Buat program untuk mengecek apakah suatu angka habis dibagi 5 atau tidak.  \r\n3. Buat program yang menghitung kuadrat dan kubik dari angka yang diinput user.\r\n                `,\r\n                exercises: [\r\n                    {\r\n                        id: 1,\r\n                        title: \"Kalkulator 2 Angka\",\r\n                        description: \"Minta 2 angka dari user, lalu tampilkan hasil operasi dasar.\",\r\n                        hint: \"Gunakan input() + int().\",\r\n                        solution: `a = int(input(\"Masukkan angka pertama: \"))\r\nb = int(input(\"Masukkan angka kedua: \"))\r\n\r\nprint(\"Tambah:\", a + b)\r\nprint(\"Kurang:\", a - b)\r\nprint(\"Kali:\", a * b)\r\nprint(\"Bagi:\", a / b)`\r\n                    },\r\n                    {\r\n                        id: 2,\r\n                        title: \"Cek Habis Dibagi 5\",\r\n                        description: \"Input angka, cek apakah habis dibagi 5.\",\r\n                        hint: \"Gunakan operator %.\",\r\n                        solution: `n = int(input(\"Masukkan angka: \"))\r\nif n % 5 == 0:\r\n    print(\"Habis dibagi 5\")\r\nelse:\r\n    print(\"Tidak habis dibagi 5\")`\r\n                    },\r\n                    {\r\n                        id: 3,\r\n                        title: \"Kuadrat & Kubik\",\r\n                        description: \"Hitung kuadrat (¬≤) dan kubik (¬≥) dari angka input.\",\r\n                        hint: \"Gunakan operator **.\",\r\n                        solution: `n = int(input(\"Masukkan angka: \"))\r\nprint(\"Kuadrat:\", n ** 2)\r\nprint(\"Kubik:\", n ** 3)`\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: 10,\r\n        title: \"Operasi Komparasi\",\r\n        description: \"Belajar operator perbandingan di Python: ==, !=, >, <, >=, <=. Pahami gimana cara membandingkan nilai.\",\r\n        level: \"Pemula\",\r\n        duration: \"1 jam\",\r\n        lessons: 3,\r\n        progress: 0,\r\n        image: \"‚öñÔ∏è\",\r\n        topics: [\r\n            \"Apa Itu Operator Komparasi?\",\r\n            \"Contoh Pemakaian\",\r\n            \"Latihan Soal\"\r\n        ],\r\n        color: \"#3396D3\",\r\n        content: [\r\n            {\r\n                id: 1,\r\n                title: \"Apa Itu Operator Komparasi?\",\r\n                type: \"theory\",\r\n                content: `\r\n# Operator Komparasi\r\n\r\nOperator komparasi = operator buat **membandingkan** dua nilai.  \r\nHasilnya selalu berupa **boolean** (\\`True\\` atau \\`False\\`).\r\n\r\n## Daftar Operator\r\n- \\`==\\` ‚Üí sama dengan\r\n- \\`!=\\` ‚Üí tidak sama dengan\r\n- \\`>\\` ‚Üí lebih besar dari\r\n- \\`<\\` ‚Üí lebih kecil dari\r\n- \\`>=\\` ‚Üí lebih besar atau sama dengan\r\n- \\`<=\\` ‚Üí lebih kecil atau sama dengan\r\n                `\r\n            },\r\n            {\r\n                id: 2,\r\n                title: \"Contoh Pemakaian\",\r\n                type: \"theory\",\r\n                content: `\r\n# Contoh Operator Komparasi\r\n\r\nCoba bandingkan angka atau string:\r\n\r\n\\`\\`\\`python\r\na = 10\r\nb = 5\r\n\r\nprint(a == b)   # sama dengan\r\nprint(a != b)   # tidak sama dengan\r\nprint(a > b)    # lebih besar\r\nprint(a < b)    # lebih kecil\r\nprint(a >= 10)  # lebih besar/sama dengan\r\nprint(b <= 5)   # lebih kecil/sama dengan\r\n\r\n# Komparasi string\r\nprint(\"Python\" == \"python\")\r\nprint(\"A\" < \"B\")\r\n\\`\\`\\`\r\n\r\nOutputnya:\r\n\r\n\\`\\`\\`\r\nFalse\r\nTrue\r\nTrue\r\nFalse\r\nTrue\r\nTrue\r\nFalse\r\nTrue\r\n\\`\\`\\`\r\n                `,\r\n                codeExample: `a = 10\r\nb = 5\r\n\r\nprint(a == b)   # False\r\nprint(a != b)   # True\r\nprint(a > b)    # True\r\nprint(a < b)    # False\r\nprint(a >= 10)  # True\r\nprint(b <= 5)   # True\r\n\r\nprint(\"Python\" == \"python\") # False\r\nprint(\"A\" < \"B\")            # True`,\r\n                expectedOutput: `False\r\nTrue\r\nTrue\r\nFalse\r\nTrue\r\nTrue\r\nFalse\r\nTrue`\r\n            },\r\n            {\r\n                id: 3,\r\n                title: \"Latihan Operasi Komparasi\",\r\n                type: \"practice\",\r\n                content: `\r\n# Latihan Operasi Komparasi\r\n\r\nCoba kerjain soal berikut:\r\n1. Buat program yang minta input umur. Jika umur >= 18, tampilkan \"Dewasa\", selain itu \"Belum Dewasa\".\r\n2. Minta dua angka, cek apakah angka pertama lebih besar dari angka kedua.\r\n3. Cek apakah sebuah string input user sama dengan \"Python\" (case sensitive).\r\n                `,\r\n                exercises: [\r\n                    {\r\n                        id: 1,\r\n                        title: \"Cek Dewasa atau Belum\",\r\n                        description: \"Input umur, tampilkan status dewasa atau belum.\",\r\n                        hint: \"Gunakan operator >=.\",\r\n                        solution: `umur = int(input(\"Masukkan umur: \"))\r\nif umur >= 18:\r\n    print(\"Dewasa\")\r\nelse:\r\n    print(\"Belum Dewasa\")`\r\n                    },\r\n                    {\r\n                        id: 2,\r\n                        title: \"Bandingkan Dua Angka\",\r\n                        description: \"Input dua angka, cek apakah angka pertama lebih besar dari kedua.\",\r\n                        hint: \"Gunakan >.\",\r\n                        solution: `a = int(input(\"Angka pertama: \"))\r\nb = int(input(\"Angka kedua: \"))\r\n\r\nif a > b:\r\n    print(\"Angka pertama lebih besar\")\r\nelse:\r\n    print(\"Angka pertama tidak lebih besar\")`\r\n                    },\r\n                    {\r\n                        id: 3,\r\n                        title: \"Cek String Python\",\r\n                        description: \"Input string, cek apakah sama dengan 'Python'.\",\r\n                        hint: \"Gunakan operator ==.\",\r\n                        solution: `kata = input(\"Masukkan kata: \")\r\n\r\nif kata == \"Python\":\r\n    print(\"Benar, itu Python!\")\r\nelse:\r\n    print(\"Bukan Python.\")`\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: 11,\r\n        title: \"Operasi Logika & Boolean\",\r\n        description: \"Pelajari tipe data boolean (True/False), operator logika (and, or, not), serta cara menggunakannya dalam kondisi.\",\r\n        level: \"Pemula\",\r\n        duration: \"1.5 jam\",\r\n        lessons: 4,\r\n        progress: 0,\r\n        image: \"üîÄ\",\r\n        topics: [\r\n            \"Apa itu Boolean?\",\r\n            \"Operator Logika\",\r\n            \"Perbandingan & Boolean\",\r\n            \"Latihan Praktik\"\r\n        ],\r\n        color: \"#FFD93D\",\r\n        content: [\r\n            {\r\n                id: 1,\r\n                title: \"Apa itu Boolean?\",\r\n                type: \"theory\",\r\n                content: `\r\n# Boolean di Python\r\n\r\nBoolean = tipe data yang hanya punya **dua nilai**:\r\n- \\`True\\`\r\n- \\`False\\`\r\n\r\nBiasanya dipakai untuk **logika / kondisi**.\r\n                `,\r\n                codeExample: `is_sunny = True\r\nis_raining = False\r\nprint(is_sunny, is_raining, type(is_sunny))`,\r\n                expectedOutput: `True False <class 'bool'>`\r\n            },\r\n            {\r\n                id: 2,\r\n                title: \"Operator Logika\",\r\n                type: \"theory\",\r\n                content: `\r\n# Operator Logika di Python\r\n\r\n- \\`and\\` ‚Üí True kalau **dua-duanya True**\r\n- \\`or\\` ‚Üí True kalau **minimal salah satu True**\r\n- \\`not\\` ‚Üí membalik nilai (True jadi False)\r\n\r\nTabel kebenaran (*truth table*):\r\n\r\n| A     | B     | A and B | A or B |\r\n|-------|-------|---------|--------|\r\n| True  | True  | True    | True   |\r\n| True  | False | False   | True   |\r\n| False | True  | False   | True   |\r\n| False | False | False   | False  |\r\n                `,\r\n                codeExample: `print(True and True)   # True\r\nprint(True and False)  # False\r\nprint(True or False)   # True\r\nprint(not True)        # False`,\r\n                expectedOutput: `True\r\nFalse\r\nTrue\r\nFalse`\r\n            },\r\n            {\r\n                id: 3,\r\n                title: \"Perbandingan & Boolean\",\r\n                type: \"theory\",\r\n                content: `\r\n# Boolean dari Operator Perbandingan\r\n\r\nHasil perbandingan di Python juga berupa Boolean.\r\n\r\n- \\`==\\` : sama dengan\r\n- \\`!=\\` : tidak sama dengan\r\n- \\`>\\`, \\`<\\` : lebih besar / kecil\r\n- \\`>=\\`, \\`<=\\` : lebih besar/kecil sama dengan\r\n                `,\r\n                codeExample: `x = 10\r\ny = 5\r\nprint(x > y)    # True\r\nprint(x == 10)  # True\r\nprint(y != 5)   # False`,\r\n                expectedOutput: `True\r\nTrue\r\nFalse`\r\n            },\r\n            {\r\n                id: 4,\r\n                title: \"Latihan Praktik\",\r\n                type: \"practice\",\r\n                content: `\r\n# Latihan Boolean & Logika\r\n\r\nCoba selesaikan soal berikut:\r\n1. Cek apakah angka positif DAN genap.\r\n2. Cek apakah nama yang dimasukkan adalah \"admin\" atau \"user\".\r\n3. Buat sistem login sederhana: username dan password benar ‚Üí akses diterima.\r\n                `,\r\n                exercises: [\r\n                    {\r\n                        id: 1,\r\n                        title: \"Positif & Genap\",\r\n                        description: \"Input angka, cek apakah positif DAN genap.\",\r\n                        hint: \"Gunakan operator and & modulus %.\",\r\n                        solution: `n = int(input(\"Masukkan angka: \"))\r\nif n > 0 and n % 2 == 0:\r\n    print(\"Angka positif dan genap\")\r\nelse:\r\n    print(\"Tidak memenuhi syarat\")`\r\n                    },\r\n                    {\r\n                        id: 2,\r\n                        title: \"Cek Nama User\",\r\n                        description: \"Input nama, cek apakah 'admin' atau 'user'.\",\r\n                        hint: \"Gunakan operator or.\",\r\n                        solution: `nama = input(\"Masukkan nama: \")\r\nif nama == \"admin\" or nama == \"user\":\r\n    print(\"Akses diterima\")\r\nelse:\r\n    print(\"Akses ditolak\")`\r\n                    },\r\n                    {\r\n                        id: 3,\r\n                        title: \"Sistem Login\",\r\n                        description: \"Buat login dengan username='admin' dan password='1234'.\",\r\n                        hint: \"Bandingkan string input dengan nilai yang ditentukan.\",\r\n                        solution: `username = input(\"Username: \")\r\npassword = input(\"Password: \")\r\n\r\nif username == \"admin\" and password == \"1234\":\r\n    print(\"Login berhasil!\")\r\nelse:\r\n    print(\"Login gagal!\")`\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: 12,\r\n        title: \"Latihan Komparasi dan Logika\",\r\n        description: \"Latihan pemahaman operator perbandingan dan logika di Python. Dari membandingkan angka hingga menggabungkan kondisi dengan AND, OR, dan NOT.\",\r\n        level: \"Menengah\",\r\n        duration: \"2 jam\",\r\n        lessons: 5,\r\n        progress: 0,\r\n        image: \"üß†\",\r\n        topics: [\r\n            \"Operator Perbandingan\",\r\n            \"Operator Logika\",\r\n            \"Kombinasi Kondisi\",\r\n            \"Latihan Kasus\",\r\n            \"Soal Praktik\"\r\n        ],\r\n        color: \"#154D71\",\r\n        content: [\r\n            {\r\n                id: 1,\r\n                title: \"Operator Perbandingan\",\r\n                type: \"theory\",\r\n                content: `\r\n# Operator Perbandingan\r\n\r\nDipakai untuk membandingkan dua nilai:\r\n\r\n- \\`==\\` sama dengan\r\n- \\`!=\\` tidak sama dengan\r\n- \\`>\\` lebih besar\r\n- \\`<\\` lebih kecil\r\n- \\`>=\\` lebih besar sama dengan\r\n- \\`<=\\` lebih kecil sama dengan\r\n\r\nHasilnya selalu \\`True\\` atau \\`False\\`.\r\n                `,\r\n                codeExample: `x = 10\r\ny = 7\r\nprint(x == y)   # False\r\nprint(x != y)   # True\r\nprint(x > y)    # True\r\nprint(x <= y)   # False`,\r\n                expectedOutput: `False\r\nTrue\r\nTrue\r\nFalse`\r\n            },\r\n            {\r\n                id: 2,\r\n                title: \"Operator Logika\",\r\n                type: \"theory\",\r\n                content: `\r\n# Operator Logika\r\n\r\nDipakai untuk menggabungkan kondisi:\r\n\r\n- \\`and\\` ‚Üí True jika semua kondisi True\r\n- \\`or\\` ‚Üí True jika salah satu kondisi True\r\n- \\`not\\` ‚Üí membalik nilai boolean\r\n                `,\r\n                codeExample: `x = 5\r\nprint(x > 0 and x < 10)   # True\r\nprint(x > 0 or x > 10)    # True\r\nprint(not (x > 0))        # False`,\r\n                expectedOutput: `True\r\nTrue\r\nFalse`\r\n            },\r\n            {\r\n                id: 3,\r\n                title: \"Kombinasi Kondisi\",\r\n                type: \"theory\",\r\n                content: `\r\n# Kombinasi Kondisi\r\n\r\nBisa digabung pakai tanda kurung buat logika yang lebih kompleks.\r\n                `,\r\n                codeExample: `umur = 20\r\npunya_ktp = True\r\n\r\nif umur >= 17 and punya_ktp:\r\n    print(\"Boleh bikin SIM\")\r\nelse:\r\n    print(\"Belum boleh\")`,\r\n                expectedOutput: `Boleh bikin SIM`\r\n            },\r\n            {\r\n                id: 4,\r\n                title: \"Latihan Kasus\",\r\n                type: \"theory\",\r\n                content: `\r\n# Contoh Kasus\r\n\r\nCek kelulusan ujian berdasarkan nilai:\r\n- Minimal 75 = Lulus\r\n- Kalau nilai < 75 = Gagal\r\n                `,\r\n                codeExample: `nilai = 80\r\nif nilai >= 75:\r\n    print(\"Lulus\")\r\nelse:\r\n    print(\"Gagal\")`,\r\n                expectedOutput: `Lulus`\r\n            },\r\n            {\r\n                id: 5,\r\n                title: \"Soal Praktik\",\r\n                type: \"practice\",\r\n                content: `\r\n# Latihan Operator Komparasi & Logika\r\n\r\nKerjain soal-soal ini biar makin jago:\r\n1. Cek apakah sebuah angka positif, negatif, atau nol.\r\n2. Minta umur user, cek apakah dia remaja (13‚Äì17) atau bukan.\r\n3. Program login sederhana (username & password).\r\n                `,\r\n                exercises: [\r\n                    {\r\n                        id: 1,\r\n                        title: \"Cek Angka Positif/Negatif\",\r\n                        description: \"Input angka, tampilkan 'Positif', 'Negatif', atau 'Nol'.\",\r\n                        hint: \"Gunakan if-elif-else.\",\r\n                        solution: `n = int(input(\"Masukkan angka: \"))\r\nif n > 0:\r\n    print(\"Positif\")\r\nelif n < 0:\r\n    print(\"Negatif\")\r\nelse:\r\n    print(\"Nol\")`\r\n                    },\r\n                    {\r\n                        id: 2,\r\n                        title: \"Cek Usia Remaja\",\r\n                        description: \"Input umur, cek apakah antara 13‚Äì17.\",\r\n                        hint: \"Gunakan operator and.\",\r\n                        solution: `umur = int(input(\"Umur kamu: \"))\r\nif umur >= 13 and umur <= 17:\r\n    print(\"Remaja\")\r\nelse:\r\n    print(\"Bukan remaja\")`\r\n                    },\r\n                    {\r\n                        id: 3,\r\n                        title: \"Program Login\",\r\n                        description: \"Minta username dan password, cek apakah sesuai.\",\r\n                        hint: \"Gunakan operator == pada string.\",\r\n                        solution: `user = input(\"Username: \")\r\npw = input(\"Password: \")\r\n\r\nif user == \"admin\" and pw == \"1234\":\r\n    print(\"Login berhasil\")\r\nelse:\r\n    print(\"Login gagal\")`\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: 13,\r\n        title: \"Operator Bitwise di Python\",\r\n        description: \"Pelajari cara kerja operator bitwise (AND, OR, XOR, NOT, shift) untuk memanipulasi data biner di Python.\",\r\n        level: \"Menengah\",\r\n        duration: \"1.5 jam\",\r\n        lessons: 6,\r\n        progress: 0,\r\n        image: \"üî¢\",\r\n        topics: [\r\n            \"Apa Itu Bitwise?\",\r\n            \"Operator AND (&)\",\r\n            \"Operator OR (|)\",\r\n            \"Operator XOR (^)\",\r\n            \"Operator NOT (~)\",\r\n            \"Shift Kiri & Kanan (<<, >>)\",\r\n            \"Latihan\"\r\n        ],\r\n        color: \"#0046FF\",\r\n        content: [\r\n            {\r\n                id: 1,\r\n                title: \"Apa Itu Bitwise?\",\r\n                type: \"theory\",\r\n                content: `\r\n# Apa Itu Operator Bitwise?\r\n\r\n- Operator bitwise bekerja pada **representasi biner** suatu angka.  \r\n- Angka di komputer disimpan dalam bentuk biner (0 dan 1).  \r\n- Bitwise memungkinkan manipulasi langsung tiap bit.\r\n\r\nContoh:\r\n- Angka 6 ‚Üí biner: 110\r\n- Angka 3 ‚Üí biner: 011\r\n                `\r\n            },\r\n            {\r\n                id: 2,\r\n                title: \"Operator AND (&)\",\r\n                type: \"theory\",\r\n                content: `\r\n# Operator AND (&)\r\n\r\nHasilnya 1 jika **kedua bit bernilai 1**, selain itu 0.\r\n\r\nContoh:\r\n- 6 (110)\r\n- 3 (011)\r\n- 6 & 3 ‚Üí 010 (hasil: 2)\r\n                `,\r\n                codeExample: `a = 6  # 110\r\nb = 3  # 011\r\nprint(a & b)`,\r\n                expectedOutput: `2`\r\n            },\r\n            {\r\n                id: 3,\r\n                title: \"Operator OR (|)\",\r\n                type: \"theory\",\r\n                content: `\r\n# Operator OR (|)\r\n\r\nHasilnya 1 jika **salah satu bit bernilai 1**.\r\n\r\nContoh:\r\n- 6 (110)\r\n- 3 (011)\r\n- 6 | 3 ‚Üí 111 (hasil: 7)\r\n                `,\r\n                codeExample: `a = 6\r\nb = 3\r\nprint(a | b)`,\r\n                expectedOutput: `7`\r\n            },\r\n            {\r\n                id: 4,\r\n                title: \"Operator XOR (^)\",\r\n                type: \"theory\",\r\n                content: `\r\n# Operator XOR (^)\r\n\r\nHasilnya 1 jika **kedua bit berbeda**.  \r\nKalau sama ‚Üí hasil 0.\r\n\r\nContoh:\r\n- 6 (110)\r\n- 3 (011)\r\n- 6 ^ 3 ‚Üí 101 (hasil: 5)\r\n                `,\r\n                codeExample: `a = 6\r\nb = 3\r\nprint(a ^ b)`,\r\n                expectedOutput: `5`\r\n            },\r\n            {\r\n                id: 5,\r\n                title: \"Operator NOT (~)\",\r\n                type: \"theory\",\r\n                content: `\r\n# Operator NOT (~)\r\n\r\nMembalik semua bit (0 jadi 1, 1 jadi 0).  \r\nDalam Python ‚Üí hasilnya = -(angka + 1).\r\n\r\nContoh:\r\n- ~6 = -(6+1) = -7\r\n                `,\r\n                codeExample: `a = 6\r\nprint(~a)`,\r\n                expectedOutput: `-7`\r\n            },\r\n            {\r\n                id: 6,\r\n                title: \"Shift Kiri (<<) & Kanan (>>)\",\r\n                type: \"theory\",\r\n                content: `\r\n# Operator Shift\r\n\r\n- **<< (kiri)**: geser bit ke kiri (sama dengan dikali 2).\r\n- **>> (kanan)**: geser bit ke kanan (sama dengan dibagi 2, dibulatkan).\r\n\r\nContoh:\r\n- 6 (110) << 1 ‚Üí 1100 (12)\r\n- 6 (110) >> 1 ‚Üí 11 (3)\r\n                `,\r\n                codeExample: `a = 6\r\nprint(a << 1)  # geser kiri\r\nprint(a >> 1)  # geser kanan`,\r\n                expectedOutput: `12\r\n3`\r\n            },\r\n            {\r\n                id: 7,\r\n                title: \"Latihan Operator Bitwise\",\r\n                type: \"practice\",\r\n                content: `\r\n# Latihan Operator Bitwise\r\n\r\nCoba kerjain soal ini biar makin paham:\r\n1. Buat program yang minta input dua angka, lalu tampilkan hasil AND, OR, XOR.\r\n2. Geser angka 15 ke kiri 2 kali, lalu ke kanan 1 kali.\r\n3. Buat fungsi untuk mengecek apakah sebuah angka **ganjil/genap** menggunakan operator bitwise.\r\n                `,\r\n                exercises: [\r\n                    {\r\n                        id: 1,\r\n                        title: \"Bitwise Kalkulator\",\r\n                        description: \"Minta dua angka, tampilkan hasil AND, OR, XOR.\",\r\n                        hint: \"Gunakan &, |, ^\",\r\n                        solution: `a = int(input(\"Masukkan angka pertama: \"))\r\nb = int(input(\"Masukkan angka kedua: \"))\r\n\r\nprint(\"AND:\", a & b)\r\nprint(\"OR:\", a | b)\r\nprint(\"XOR:\", a ^ b)`\r\n                    },\r\n                    {\r\n                        id: 2,\r\n                        title: \"Geser Angka\",\r\n                        description: \"Geser angka 15 ke kiri 2 kali, lalu ke kanan 1 kali.\",\r\n                        hint: \"Gunakan << dan >>\",\r\n                        solution: `x = 15\r\nprint(\"Geser kiri 2:\", x << 2)\r\nprint(\"Geser kanan 1:\", x >> 1)`\r\n                    },\r\n                    {\r\n                        id: 3,\r\n                        title: \"Cek Genap/Ganjil dengan Bitwise\",\r\n                        description: \"Gunakan operator & untuk cek genap/ganjil.\",\r\n                        hint: \"Angka genap ‚Üí bit terakhir = 0\",\r\n                        solution: `def cek_genap_ganjil(n):\r\n    if n & 1 == 0:\r\n        print(\"Genap\")\r\n    else:\r\n        print(\"Ganjil\")\r\n\r\ncek_genap_ganjil(7)\r\ncek_genap_ganjil(10)`\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: 14,\r\n        title: \"Operator Assignment di Python\",\r\n        description: \"Belajar gimana cara pakai operator assignment (=, +=, -=, dll) buat nyimpen dan update nilai variabel dengan cara singkat.\",\r\n        level: \"Pemula\",\r\n        duration: \"1 jam\",\r\n        lessons: 3,\r\n        progress: 0,\r\n        image: \"‚úçÔ∏è\",\r\n        topics: [\r\n            \"Apa itu Operator Assignment?\",\r\n            \"Macam-Macam Operator Assignment\",\r\n            \"Latihan Praktik\"\r\n        ],\r\n        color: \"#5A9690\",\r\n        content: [\r\n            {\r\n                id: 1,\r\n                title: \"Apa itu Operator Assignment?\",\r\n                type: \"theory\",\r\n                content: `\r\n# Operator Assignment\r\n\r\nOperator **assignment** itu dipakai buat **menyimpan nilai ke dalam variabel**.  \r\nSimbol utamanya adalah tanda sama dengan (=).\r\n\r\nContoh:\r\n\\`\\`\\`python\r\nx = 10\r\nprint(x) # 10\r\n\\`\\`\\`\r\n\r\nArtinya: *variabel x dikasih nilai 10.*\r\n\r\nSelain \"=\" biasa, Python juga punya bentuk assignment lain yang lebih singkat.  \r\nMisalnya: \r\n- \\`+=\\` buat nambah nilai ke variabel\r\n- \\`-=\\` buat ngurangin nilai variabel\r\n- dst.\r\n\r\nAssignment operator ini kaya shortcut biar kita ga nulis kode panjang.\r\n            `\r\n            },\r\n            {\r\n                id: 2,\r\n                title: \"Macam-Macam Operator Assignment\",\r\n                type: \"theory\",\r\n                content: `\r\n# Macam-Macam Operator Assignment di Python\r\n\r\nYuk kita liat satu-satu dengan contoh langsung:\r\n\r\n\\`\\`\\`python\r\nprint(\"==== Assignment Biasa ====\")\r\nx = 5\r\nprint(\"x =\", x)\r\n\r\nprint(\"\\\\n==== Tambah (+=) ====\")\r\nx = 5\r\nx += 3   # sama dengan x = x + 3\r\nprint(\"x =\", x)\r\n\r\nprint(\"\\\\n==== Kurang (-=) ====\")\r\nx = 10\r\nx -= 4\r\nprint(\"x =\", x)\r\n\r\nprint(\"\\\\n==== Kali (*=) ====\")\r\nx = 7\r\nx *= 2\r\nprint(\"x =\", x)\r\n\r\nprint(\"\\\\n==== Bagi (/=) ====\")\r\nx = 20\r\nx /= 5\r\nprint(\"x =\", x)\r\n\r\nprint(\"\\\\n==== Bagi Bulat (//=) ====\")\r\nx = 20\r\nx //= 3\r\nprint(\"x =\", x)\r\n\r\nprint(\"\\\\n==== Modulus (%=) ====\")\r\nx = 10\r\nx %= 3\r\nprint(\"x =\", x)\r\n\r\nprint(\"\\\\n==== Pangkat (**=) ====\")\r\nx = 2\r\nx **= 3\r\nprint(\"x =\", x)\r\n\\`\\`\\`\r\n\r\nOutput:\r\n\\`\\`\\`\r\n==== Assignment Biasa ====\r\nx = 5\r\n\r\n==== Tambah (+=) ====\r\nx = 8\r\n\r\n==== Kurang (-=) ====\r\nx = 6\r\n\r\n==== Kali (*=) ====\r\nx = 14\r\n\r\n==== Bagi (/=) ====\r\nx = 4.0\r\n\r\n==== Bagi Bulat (//=) ====\r\nx = 6\r\n\r\n==== Modulus (%=) ====\r\nx = 1\r\n\r\n==== Pangkat (**=) ====\r\nx = 8\r\n\\`\\`\\`\r\n\r\nSelain itu ada juga **operator assignment untuk bitwise** (jarang dipake di level pemula, tapi penting di level menengah):\r\n- \\`&=\\` (AND)\r\n- \\`|=\\` (OR)\r\n- \\`^=\\` (XOR)\r\n- \\`>>=\\` (geser kanan)\r\n- \\`<<=\\` (geser kiri)\r\n            `\r\n            },\r\n            {\r\n                id: 3,\r\n                title: \"Latihan Praktik\",\r\n                type: \"practice\",\r\n                content: `\r\n# Latihan Operator Assignment\r\n\r\nCoba kerjain soal berikut:\r\n\r\n1. Mulai dengan \\`x = 10\\`, lalu tambahkan 5 menggunakan operator assignment.\r\n2. Buat variabel \\`y = 50\\`, lalu kurangi 20 menggunakan \\`-=\\`.\r\n3. Buat variabel \\`z = 4\\`, kalikan dengan 3, lalu pangkatkan 2 (gunakan operator assignment).\r\n4. Simulasi tabungan: Mulai dengan saldo = 1000, lalu tambah 200, kurangi 150, dan kalikan 2 (karena dapet bonus). Tampilkan saldo akhir.\r\n            `,\r\n                exercises: [\r\n                    {\r\n                        id: 1,\r\n                        title: \"Tambah 5\",\r\n                        description: \"Gunakan x = 10 lalu tambahkan 5 pakai operator assignment.\",\r\n                        hint: \"Pakai +=.\",\r\n                        solution: `x = 10\r\nx += 5\r\nprint(x)  # 15`\r\n                    },\r\n                    {\r\n                        id: 2,\r\n                        title: \"Kurangi 20\",\r\n                        description: \"Buat y = 50, lalu kurangi 20.\",\r\n                        hint: \"Pakai -=.\",\r\n                        solution: `y = 50\r\ny -= 20\r\nprint(y)  # 30`\r\n                    },\r\n                    {\r\n                        id: 3,\r\n                        title: \"Kali dan Pangkat\",\r\n                        description: \"Buat z = 4, kali 3 lalu pangkat 2.\",\r\n                        hint: \"Gunakan *= dan **=.\",\r\n                        solution: `z = 4\r\nz *= 3   # z = 12\r\nz **= 2  # z = 144\r\nprint(z)`\r\n                    },\r\n                    {\r\n                        id: 4,\r\n                        title: \"Simulasi Tabungan\",\r\n                        description: \"Mulai dengan saldo = 1000, lalu +200, -150, √ó2.\",\r\n                        hint: \"Urutkan pakai +=, -=, *=.\",\r\n                        solution: `saldo = 1000\r\nsaldo += 200\r\nsaldo -= 150\r\nsaldo *= 2\r\nprint(saldo)  # 2100`\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n];\r\n\r\nexport default lessonCards;"],"mappings":"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,EACD;MACIhB,EAAE,EAAE,CAAC;MACLC,KAAK,EAAE,iCAAiC;MACxCC,WAAW,EAAE,4CAA4C;MACzDa,IAAI,EAAE,gCAAgC;MACtCC,QAAQ,EAAE;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;IACoB,CAAC;EAET,CAAC;AAET,CAAC,EACD;EACIhB,EAAE,EAAE,EAAE;EACNC,KAAK,EAAE,+BAA+B;EACtCC,WAAW,EAAE,4HAA4H;EACzIC,KAAK,EAAE,QAAQ;EACfC,QAAQ,EAAE,OAAO;EACjBC,OAAO,EAAE,CAAC;EACVC,QAAQ,EAAE,CAAC;EACXC,KAAK,EAAE,IAAI;EACXC,MAAM,EAAE,CACJ,8BAA8B,EAC9B,iCAAiC,EACjC,iBAAiB,CACpB;EACDC,KAAK,EAAE,SAAS;EAChBC,OAAO,EAAE,CACL;IACIV,EAAE,EAAE,CAAC;IACLC,KAAK,EAAE,8BAA8B;IACrCU,IAAI,EAAE,QAAQ;IACdD,OAAO,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACY,CAAC,EACD;IACIV,EAAE,EAAE,CAAC;IACLC,KAAK,EAAE,iCAAiC;IACxCU,IAAI,EAAE,QAAQ;IACdD,OAAO,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACY,CAAC,EACD;IACIV,EAAE,EAAE,CAAC;IACLC,KAAK,EAAE,iBAAiB;IACxBU,IAAI,EAAE,UAAU;IAChBD,OAAO,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;IACGI,SAAS,EAAE,CACP;MACId,EAAE,EAAE,CAAC;MACLC,KAAK,EAAE,UAAU;MACjBC,WAAW,EAAE,4DAA4D;MACzEa,IAAI,EAAE,WAAW;MACjBC,QAAQ,EAAE;AAClC;AACA;IACoB,CAAC,EACD;MACIhB,EAAE,EAAE,CAAC;MACLC,KAAK,EAAE,YAAY;MACnBC,WAAW,EAAE,+BAA+B;MAC5Ca,IAAI,EAAE,WAAW;MACjBC,QAAQ,EAAE;AAClC;AACA;IACoB,CAAC,EACD;MACIhB,EAAE,EAAE,CAAC;MACLC,KAAK,EAAE,kBAAkB;MACzBC,WAAW,EAAE,oCAAoC;MACjDa,IAAI,EAAE,qBAAqB;MAC3BC,QAAQ,EAAE;AAClC;AACA;AACA;IACoB,CAAC,EACD;MACIhB,EAAE,EAAE,CAAC;MACLC,KAAK,EAAE,mBAAmB;MAC1BC,WAAW,EAAE,iDAAiD;MAC9Da,IAAI,EAAE,2BAA2B;MACjCC,QAAQ,EAAE;AAClC;AACA;AACA;AACA;IACoB,CAAC;EAET,CAAC;AAET,CAAC,CACJ;AAED,eAAejB,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}